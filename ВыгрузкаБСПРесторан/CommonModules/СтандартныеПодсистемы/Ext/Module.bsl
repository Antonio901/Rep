#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий ЭДВАНС объектов.

// Вызывается из события ОбработкаЗаполнения модулей объектов ЭДВАНС документов.
//
// Параметры:
//  Объект - СправочникОбъект, ДокументОбъект - заполняемый объект;
//  ИмяРеквизита - Строка - имя реквизита Организация.
//
Процедура ПриВводеНовогоЗаполнитьОрганизацию(Объект, ИмяРеквизита = "Организация") Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Ссылка КАК Организация
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константа.ОсновнаяОрганизация КАК ОсновнаяОрганизация
	|		ПО Организации.Ссылка = ОсновнаяОрганизация.Значение";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Объект[ИмяРеквизита] = Выборка.Организация;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий подсистемы БазоваяФункциональность.

// См. ОбщегоНазначенияПереопределяемый.ПриДобавленииПереименованийОбъектовМетаданных.
Процедура ПриДобавленииПереименованийОбъектовМетаданных(Итог) Экспорт
	
	// 2.0.1.14
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.0.1.14",
		"Роль.РаботаСПапкамиФайлов", "Роль.ДобавлениеИзменениеПапокИФайлов");
	
	// 2.1.2.5
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.5",
		"Подсистема.ОбменДанными.Подсистема.НастройкаОбмена",
		"Подсистема.СинхронизацияДанных.Подсистема.НастройкаСинхронизации");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.5",
		"Подсистема.ОбменДанными.Подсистема.ОбъектыОбмена",
		"Подсистема.СинхронизацияДанных.Подсистема.ОбъектыСинхронизации");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.5",
		"Подсистема.ОбменДанными", "Подсистема.СинхронизацияДанных");
	
	// 2.1.2.7
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.7",
		"Подсистема.НастройкаИАдминистрирование",
		"Подсистема.НастройкаИАдминистрирование");
	
	// 2.1.2.14
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.Анкетирование.Подсистема.Респонденты",
		"Подсистема.Анкетирование.Подсистема.Респонденты");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.Анкетирование.Подсистема.СозданиеАнкетИОпросов",
		"Подсистема.Анкетирование.Подсистема.СозданиеАнкетИОпросов");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.Анкетирование.Подсистема.УправлениеВнешнимиПользователями",
		"Подсистема.Анкетирование.Подсистема.УправлениеВнешнимиПользователями");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.Анкетирование.Подсистема.ХодАнкетированияИАнализ",
		"Подсистема.Анкетирование.Подсистема.ХодАнкетированияИАнализ");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.БизнесПроцессыИЗадачи.Подсистема.ИсполнениеЗадач",
		"Подсистема.БизнесПроцессыИЗадачи.Подсистема.ИсполнениеЗадач");
		
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.БизнесПроцессыИЗадачи.Подсистема.ВыдачаЗаданий",
		"Подсистема.БизнесПроцессыИЗадачи.Подсистема.ВыдачаЗаданий");
		
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.БизнесПроцессыИЗадачи.Подсистема.КонтрольИсполнения",
		"Подсистема.БизнесПроцессыИЗадачи.Подсистема.КонтрольИсполнения");
		
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.БизнесПроцессыИЗадачи.Подсистема.НастройкаРолевойАдресации",
		"Подсистема.БизнесПроцессыИЗадачи.Подсистема.НастройкаРолевойАдресации");
		
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.БизнесПроцессыИЗадачи.Подсистема.МониторингЗадач",
		"Подсистема.БизнесПроцессыИЗадачи.Подсистема.МониторингЗадач");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.ИнтегрируемыеПодсистемы.Подсистема.Версионирование.Подсистема.ВерсионированиеИспользование",
		"Подсистема.ИнтегрируемыеПодсистемы.Подсистема.Версионирование.Подсистема.Использование");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.ИнтегрируемыеПодсистемы.Подсистема.Версионирование.Подсистема.ВерсионированиеНастройка",
		"Подсистема.ИнтегрируемыеПодсистемы.Подсистема.Версионирование.Подсистема.Настройка");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.ИнтегрируемыеПодсистемы.Подсистема.КонтактнаяИнформация.Подсистема.КонтактнаяИнформацияИспользование",
		"Подсистема.ИнтегрируемыеПодсистемыПродолжение.Подсистема.КонтактнаяИнформация.Подсистема.Использование");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.ИнтегрируемыеПодсистемы.Подсистема.КонтактнаяИнформация.Подсистема.КонтактнаяИнформацияНастройка",
		"Подсистема.ИнтегрируемыеПодсистемыПродолжение.Подсистема.КонтактнаяИнформация.Подсистема.Настройка");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.ИнтегрируемыеПодсистемы.Подсистема.КонтактнаяИнформация",
		"Подсистема.ИнтегрируемыеПодсистемыПродолжение.Подсистема.КонтактнаяИнформация");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.ИнтегрируемыеПодсистемы.Подсистема.Печать.Подсистема.ПечатьНастройка",
		"Подсистема.ИнтегрируемыеПодсистемыПродолжение.Подсистема.Печать.Подсистема.Настройка");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.ИнтегрируемыеПодсистемы.Подсистема.Печать.Подсистема.ПечатьИспользование",
		"Подсистема.ИнтегрируемыеПодсистемыПродолжение.Подсистема.Печать.Подсистема.Использование");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.ИнтегрируемыеПодсистемы.Подсистема.Печать",
		"Подсистема.ИнтегрируемыеПодсистемыПродолжение.Подсистема.Печать");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.ИнтегрируемыеПодсистемы.Подсистема.Свойства.Подсистема.СвойстваИспользование",
		"Подсистема.ИнтегрируемыеПодсистемыПродолжение.Подсистема.Свойства.Подсистема.Использование");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.ИнтегрируемыеПодсистемы.Подсистема.Свойства.Подсистема.СвойстваНастройка",
		"Подсистема.ИнтегрируемыеПодсистемыПродолжение.Подсистема.Свойства.Подсистема.Настройка");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.ИнтегрируемыеПодсистемы.Подсистема.РассылкиОтчетов",
		"Подсистема.СервисныеПодсистемы.Подсистема.РассылкиОтчетов");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.ИнтегрируемыеПодсистемы.Подсистема.Свойства",
		"Подсистема.ИнтегрируемыеПодсистемыПродолжение.Подсистема.Свойства");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.ИнтегрируемыеПодсистемыПродолжение.Подсистема.ГрупповоеИзменениеОбъектов",
		"Подсистема.СервисныеПодсистемы.Подсистема.ГрупповоеИзменениеОбъектов");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.ИнтегрируемыеПодсистемыПродолжение.Подсистема.ДатыЗапретаИзменения.Подсистема.ДатыЗапретаИзмененияВнутренниеДанные",
		"Подсистема.ИнтегрируемыеПодсистемы.Подсистема.ДатыЗапретаИзменения.Подсистема.ВнутренниеДанные");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.ИнтегрируемыеПодсистемыПродолжение.Подсистема.ДатыЗапретаИзменения.Подсистема.ДатыЗапретаИзмененияИспользование",
		"Подсистема.ИнтегрируемыеПодсистемы.Подсистема.ДатыЗапретаИзменения.Подсистема.Использование");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.ИнтегрируемыеПодсистемыПродолжение.Подсистема.ДатыЗапретаИзменения.Подсистема.ДатыЗапретаИзмененияНастройка",
		"Подсистема.ИнтегрируемыеПодсистемы.Подсистема.ДатыЗапретаИзменения.Подсистема.Настройка");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.ИнтегрируемыеПодсистемыПродолжение.Подсистема.ДатыЗапретаИзменения",
		"Подсистема.ИнтегрируемыеПодсистемы.Подсистема.ДатыЗапретаИзменения");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.ИнтегрируемыеПодсистемыПродолжение.Подсистема.ЗаметкиПользователя.Подсистема.ЗаметкиПользователяВнутренниеДанные",
		"Подсистема.Органайзер.Подсистема.ЗаметкиПользователя.Подсистема.ВнутренниеДанные");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.ИнтегрируемыеПодсистемыПродолжение.Подсистема.ЗаметкиПользователя.Подсистема.ЗаметкиПользователяИспользование",
		"Подсистема.Органайзер.Подсистема.ЗаметкиПользователя.Подсистема.Использование");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.ИнтегрируемыеПодсистемыПродолжение.Подсистема.ЗаметкиПользователя",
		"Подсистема.Органайзер.Подсистема.ЗаметкиПользователя");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.ИнтегрируемыеПодсистемыПродолжение.Подсистема.ЗапретРедактированияРеквизитов",
		"Подсистема.ИнтегрируемыеПодсистемы.Подсистема.ЗапретРедактированияРеквизитов");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.ИнтегрируемыеПодсистемыПродолжение.Подсистема.ЗащитаПерсональныхДанных",
		"Подсистема.ИнтегрируемыеПодсистемы.Подсистема.ЗащитаПерсональныхДанных");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.ИнтегрируемыеПодсистемыПродолжение.Подсистема.НапоминанияПользователя",
		"Подсистема.Органайзер.Подсистема.НапоминанияПользователя");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.ИнтегрируемыеПодсистемыПродолжение.Подсистема.ПрисоединенныеФайлы",
		"Подсистема.Органайзер.Подсистема.ПрисоединенныеФайлы");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.Подсистемы.Подсистема.Банки",
		"Подсистема.НормативноСправочнаяИнформация.Подсистема.Банки");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.Подсистемы.Подсистема.Валюты",
		"Подсистема.НормативноСправочнаяИнформация.Подсистема.Валюты");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.Подсистемы.Подсистема.Взаимодействия.Подсистема.ВзаимодействияИспользование",
		"Подсистема.Органайзер.Подсистема.Взаимодействия.Подсистема.Использование");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.Подсистемы.Подсистема.Взаимодействия.Подсистема.ВзаимодействияНастройка",
		"Подсистема.Органайзер.Подсистема.Взаимодействия.Подсистема.Настройка");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.Подсистемы.Подсистема.Взаимодействия",
		"Подсистема.Органайзер.Подсистема.Взаимодействия");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.Подсистемы.Подсистема.КалендарныеГрафики",
		"Подсистема.НормативноСправочнаяИнформация.Подсистема.КалендарныеГрафики");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.Подсистемы.Подсистема.РаботаСПочтовымиСообщениями",
		"Подсистема.Органайзер.Подсистема.РаботаСПочтовымиСообщениями");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.РаботаСФайлами.Подсистема.ПрисоединенныеФайлы",
		"Подсистема.Органайзер.Подсистема.РаботаСФайлами.Подсистема.ПрисоединенныеФайлы");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.РаботаСФайлами.Подсистема.РаботаСФайламиНастройка",
		"Подсистема.Органайзер.Подсистема.РаботаСФайлами.Подсистема.Настройка");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.РаботаСФайлами",
		"Подсистема.Органайзер.Подсистема.РаботаСФайлами");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.УправлениеДоступом.Подсистема.УправлениеДоступомНастройка",
		"Подсистема.УправлениеДоступом.Подсистема.Настройка");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.УправлениеДоступом.Подсистема.УправлениеДоступомИспользование",
		"Подсистема.УправлениеДоступом.Подсистема.Использование");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.УправлениеДоступом.Подсистема.УправлениеДоступомВнутренниеДанные",
		"Подсистема.УправлениеДоступом.Подсистема.ВнутренниеДанные");
	
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.1.2.14",
		"Подсистема.Подсистемы",
		"Подсистема.СервисныеПодсистемы");
	
	// 2.2.1.31
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.2.1.31",
		"Подсистема.Органайзер.Подсистема.РаботаСФайлами.Подсистема.Настройка",
		"Подсистема.Органайзер.Подсистема.РаботаСФайлами.Подсистема.НастройкаИОбслуживание");
	
	// 2.2.4.11
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.2.4.11",
		"Подсистема.СервисныеПодсистемы.Подсистема.БазоваяФункциональность.Подсистема.ЗаменаИОбъединениеЭлементов",
		"Подсистема.СервисныеПодсистемы.Подсистема.ПоискИУдалениеДублей");
	
	// 2.2.5.2
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.2.5.2",
		"Роль.БазовыеПраваБСП", "Роль.БазовыеПраваПользователяБСП");
		
	// 2.3.1.36
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.3.1.36",
		"Роль.БазовыеПраваВнешнегоПользователяБСП", "Роль.ОплатаСчетовВнешнимиПользователями");
	
	// 2.4.1.1
	ОбщегоНазначения.ДобавитьПереименование(Итог, "2.4.1.1",
		"Роль.Интеграция1СБухфон", "Роль.ВызовОнлайнПоддержки");
	
КонецПроцедуры

// См. ОбщегоНазначенияПереопределяемый.ПриОпределенииОбщихПараметровБазовойФункциональности.
Процедура ПриОпределенииОбщихПараметровБазовойФункциональности(ОбщиеПараметры) Экспорт
	
	ОбщиеПараметры.ИмяФормыПерсональныхНастроек = "ОбщаяФорма.МоиНастройки";
	
КонецПроцедуры

// См. ОбщегоНазначенияПереопределяемый.ПриОпределенииОтключенныхПодсистем.
Процедура ПриОпределенииОтключенныхПодсистем(ОтключенныеПодсистемы) Экспорт
	
	ОтключенныеПодсистемы = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"БазоваяФункциональность", "ОтключенныеПодсистемы", Новый Соответствие);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий подсистемы Бизнес-процессы и задачи

// См. БизнесПроцессыИЗадачиПереопределяемый.ПриЗаполненииНаборовЗначенийДоступа.
Процедура ПриЗаполненииНаборовЗначенийДоступаБизнесПроцессов(Объект, Таблица) Экспорт
	
	//Если ТипЗнч(Объект) = Тип("БизнесПроцессОбъект.Задание") Тогда
	//	// Логика ограничения для
	//	// - чтения:    Автор ИЛИ Исполнитель (с учетом адресации) ИЛИ Проверяющий (с учетом адресации)
	//	// - изменения: Автор.
	//	
	//	// Если предмет не задан (т.е. бизнес-процесс без основания),
	//	// тогда предмет не участвует в логике ограничения.
	//	
	//	// Чтение, Изменение: набор № 1.
	//	Строка = Таблица.Добавить();
	//	Строка.НомерНабора     = 1;
	//	Строка.Чтение          = Истина;
	//	Строка.Изменение       = Истина;
	//	Строка.ЗначениеДоступа = Объект.Автор;
	//	
	//	// Чтение: набор № 2.
	//	Строка = Таблица.Добавить();
	//	Строка.НомерНабора     = 2;
	//	Строка.Чтение          = Истина;
	//	Строка.ЗначениеДоступа = Объект.ГруппаИсполнителейЗадач;
	//	
	//	// Чтение: набор № 3.
	//	Строка = Таблица.Добавить();
	//	Строка.НомерНабора     = 3;
	//	Строка.Чтение          = Истина;
	//	Строка.ЗначениеДоступа = Объект.ГруппаИсполнителейЗадачПроверяющий;
	//	
	//КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// Обработчики событий подсистемы Взаимодействия.

// См. ВзаимодействияПереопределяемый.ПриЗаполненииНаборовЗначенийДоступа.
Процедура ПриЗаполненииНаборовЗначенийДоступаДляОбъектаВзаимодействия(Объект, Таблица) Экспорт
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.Встреча") Тогда
		ПриЗаполненииНаборовЗначенийДоступаДляВстречи(Объект, Таблица);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ЗапланированноеВзаимодействие") Тогда
		ПриЗаполненииНаборовЗначенийДоступаДляЗапланированногоВзаимодействия(Объект, Таблица);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.СообщениеSMS") Тогда
		ПриЗаполненииНаборовЗначенийДоступаДляСообщенияSMS(Объект, Таблица);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ТелефонныйЗвонок") Тогда
		ПриЗаполненииНаборовЗначенийДоступаДляТелефонногоЗвонка(Объект, Таблица);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ЭлектронноеПисьмоВходящее") Тогда
		ПриЗаполненииНаборовЗначенийДоступаДляЭлектронногоПисьмаВходящего(Объект, Таблица);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ЭлектронноеПисьмоИсходящее") Тогда
		ПриЗаполненииНаборовЗначенийДоступаДляЭлектронногоПисьмаИсходящего(Объект, Таблица);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий подсистемы ДатыЗапретаИзменения.

// См. ДатыЗапретаИзмененияПереопределяемый.НастройкаИнтерфейса.
Процедура НастройкаИнтерфейса(Знач НастройкиРаботыИнтерфейса) Экспорт
	
	НастройкиРаботыИнтерфейса.ИспользоватьВнешнихПользователей = Истина;
	
КонецПроцедуры

// См. ДатыЗапретаИзмененияПереопределяемый.ПриЗаполненииРазделовДатЗапретаИзменения.
Процедура ПриЗаполненииРазделовДатЗапретаИзменения(Разделы) Экспорт
	
	Раздел = Разделы.Добавить();
	Раздел.Имя  = "Банк";
	Раздел.Идентификатор = Новый УникальныйИдентификатор("4109a54a-f3ea-474c-9079-be08bf335668");
	Раздел.Представление = НСтр("ru = 'Банк'");
	Раздел.ТипыОбъектов.Добавить(Тип("СправочникСсылка.БанковскиеСчета"));

	Раздел = Разделы.Добавить();
	Раздел.Имя  = "НачислениеЗарплаты";
	Раздел.Идентификатор = Новый УникальныйИдентификатор("100aba96-ea50-4f82-a06c-2e3fdc39a9f1");
	Раздел.Представление = НСтр("ru = 'Начисление зарплаты'");

	Раздел = Разделы.Добавить();
	Раздел.Имя  = "СкладскойУчет";
	Раздел.Идентификатор = Новый УникальныйИдентификатор("dc05fcce-97da-4f78-8317-d9b2b7f1388d");
	Раздел.Представление = НСтр("ru = 'Складской учет'");
	Раздел.ТипыОбъектов.Добавить(Тип("СправочникСсылка.МестаХранения"));

	Раздел = Разделы.Добавить();
	Раздел.Имя  = "Торговля";
	Раздел.Идентификатор = Новый УникальныйИдентификатор("7d63fbe5-db98-407e-89f5-c770e6a90cb2");
	Раздел.Представление = НСтр("ru = 'Торговля'");
	Раздел.ТипыОбъектов.Добавить(Тип("ПеречислениеСсылка.ЮридическоеФизическоеЛицо"));
	
КонецПроцедуры

// См. ДатыЗапретаИзмененияПереопределяемый.ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения.
Процедура ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения(Знач ИсточникиДанных) Экспорт
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
		Метаданные.Документы.ЗаказПокупателя.ПолноеИмя(),
		"Дата", "Торговля", "Партнер.ВидПартнера");
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
		Метаданные.Документы.ЗаказПокупателя.ПолноеИмя(),
		"Дата", "Торговля", "ПартнерыИКонтактныеЛица.Партнер.ВидПартнера");
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
		Метаданные.Документы.ЗаказПокупателя.ПолноеИмя(),
		"СчетаНаОплату.Счет.Дата", "Торговля", "Партнер.ВидПартнера");
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
		Метаданные.Документы.ЗаказПокупателя.ПолноеИмя(),
		"СчетаНаОплату.Счет.Дата", "Торговля", "ПартнерыИКонтактныеЛица.Партнер.ВидПартнера");
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
		Метаданные.Документы.ЗаказПокупателя.ПолноеИмя(),
		"СчетаНаОплату.Счет.Дата", "Торговля", "СчетаНаОплату.Счет.Партнер.ВидПартнера");
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
		Метаданные.Документы.НачислениеЗарплаты.ПолноеИмя(),
		"Дата", "НачислениеЗарплаты", "");
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
		Метаданные.Документы.ОприходованиеТоваров.ПолноеИмя(),
		"Дата", "СкладскойУчет", "МестоХранения");
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
		Метаданные.Документы.ПеремещениеТоваров.ПолноеИмя(),
		"Дата", "СкладскойУчет", "МестоХраненияИсточник");
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
		Метаданные.Документы.ПеремещениеТоваров.ПолноеИмя(),
		"Дата", "СкладскойУчет", "МестоХраненияПриемник");
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
		Метаданные.Документы.СписаниеТоваров.ПолноеИмя(),
		"Дата", "СкладскойУчет", "МестоХранения");
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
		Метаданные.Документы.ПоступлениеТоваров.ПолноеИмя(),
		"Дата", "Торговля", "Контрагент.Партнер.ВидПартнера");
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
		Метаданные.Документы.ПоступлениеТоваров.ПолноеИмя(),
		"Дата", "СкладскойУчет", "МестоХранения");
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
		Метаданные.Документы.РеализацияТоваров.ПолноеИмя(),
		"Дата", "Торговля", "Контрагент.Партнер.ВидПартнера");
		
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
		Метаданные.Документы.РеализацияТоваров.ПолноеИмя(),
		"Дата", "СкладскойУчет", "МестоХранения");
	
	//ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
	//	Метаданные.Документы.СписаниеБезналичныхДенежныхСредств.ПолноеИмя(),
	//	"ДатаПроведенияБанком", "Банк", "БанковскийСчет");
		
	//ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
	//	Метаданные.Документы.КорректировкаОстатковТоваровВМестахХранения.ПолноеИмя(),
	//	"Дата", "", "");

	
	//ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
	//	Метаданные.РегистрыСведений.ЗаведующиеМестамиХранения.ПолноеИмя(),
	//	"Период", "СкладскойУчет", "МестоХранения");
	
	//ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
	//	Метаданные.РегистрыСведений.КурсыВалют.ПолноеИмя(),
	//	"Период", "", "");
		
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
		Метаданные.РегистрыНакопления.ОстаткиТоваровВМестахХранения.ПолноеИмя(),
		"Период", "СкладскойУчет", "МестоХранения");

	
КонецПроцедуры

// См. ДатыЗапретаИзмененияПереопределяемый.ПередПроверкойЗапретаИзменения.
Процедура ПередПроверкойЗапретаИзменения(Объект, ПроверкаЗапретаИзменения, УзелПроверкиЗапретаЗагрузки, ВерсияОбъекта) Экспорт
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ЗаказПокупателя") Тогда
		Если Объект.ЭтоНовый() Тогда
			ЗаказЗакрытСтараяВерсия = Ложь;
		Иначе
			СтатусЗаказа = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "СтатусЗаказа");
			ЗаказЗакрытСтараяВерсия = (СтатусЗаказа = Перечисления.СтатусыЗаказовПокупателей.Закрыт);
		КонецЕсли;
		ЗаказЗакрытНоваяВерсия = (Объект.СтатусЗаказа = Перечисления.СтатусыЗаказовПокупателей.Закрыт);
		
		Если Не ЗаказЗакрытСтараяВерсия И Не ЗаказЗакрытНоваяВерсия Тогда
			ПроверкаЗапретаИзменения = Ложь;
			УзелПроверкиЗапретаЗагрузки = Неопределено;
			
		ИначеЕсли Не ЗаказЗакрытНоваяВерсия Тогда
			ВерсияОбъекта = "СтараяВерсия"; // Проверить только старую версию объекта.
		
		ИначеЕсли Не ЗаказЗакрытСтараяВерсия Тогда
			ВерсияОбъекта = "НоваяВерсия"; // Проверить только новую версию объекта.
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.СписаниеБезналичныхДенежныхСредств") Тогда
		// Отказ от проверки с учетом того, что ДатаПроведенияБанком, используемая в проверке не указывается,
		// если документ не проведен банком, а указывается позже после проведения документа банком.
		Если Объект.ЭтоНовый() Тогда
			ПроведеноБанкомСтараяВерсия = Ложь;
		Иначе
			ПроведеноБанком = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ПроведеноБанком");
			ПроведеноБанкомСтараяВерсия = ?(ТипЗнч(ПроведеноБанком) <> Тип("Булево"), Ложь, ПроведеноБанком);
		КонецЕсли;
		ПроведеноБанкомНоваяВерсия = Объект.ПроведеноБанком;
		
		Если Не ПроведеноБанкомНоваяВерсия И Не ПроведеноБанкомСтараяВерсия Тогда
			ПроверкаЗапретаИзменения = Ложь;
			УзелПроверкиЗапретаЗагрузки = Неопределено;
			
		ИначеЕсли Не ПроведеноБанкомНоваяВерсия Тогда
			ВерсияОбъекта = "СтараяВерсия"; // Проверить только старую версию объекта.
		
		ИначеЕсли Не ПроведеноБанкомСтараяВерсия Тогда
			ВерсияОбъекта = "НоваяВерсия"; // Проверить только новую версию объекта.
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий подсистемы ЗапретРедактированияРеквизитовОбъектов.

// См. ЗапретРедактированияРеквизитовОбъектовПереопределяемый.ПриОпределенииОбъектовСЗаблокированнымиРеквизитами.
Процедура ПриОпределенииОбъектовСЗаблокированнымиРеквизитами(Объекты) Экспорт
	
	Объекты.Вставить(Метаданные.Справочники.КассыККМ.ПолноеИмя(), "");
	Объекты.Вставить(Метаданные.Справочники.Номенклатура.ПолноеИмя(), "");
	Объекты.Вставить(Метаданные.Документы.ЗаказПокупателя.ПолноеИмя(), "");
	Объекты.Вставить(Метаданные.ПланыСчетов.Основной.ПолноеИмя(), "");

	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий подсистемы КонтрольВеденияУчета.

// Исполняет проверку заполненности комментария в приходной накладной.
//
// Параметры:
//   Проверка            - СправочникСсылка.ПравилаПроверкиУчета - Ссылка на исполняемую проверку.
//   ПараметрыПроверки   - Структура - Параметры проверки которую необходимо выполнить:
//     * Идентификатор      - Строка - Строковый идентификатор проверки.
//     * ДатаНачалаПроверки - Дата - Пороговая дата, обозначающая границу проверяемых
//                            объектов (только для объектов с датой). Объекты, дата которых меньше 
//                            указанной, не следует проверять. По умолчанию не заполнено (т.е. проверять все).
//     * ЛимитПроблем       - Число - Количество проверяемых объектов.
//                            По умолчанию 1000. Если указано 0, то следует проверить все объекты.
//     * ВидПроверки        - СправочникСсылка.ВидыПроверок - Ссылка на вид проверки, к
//                            которому относится выполненная проверка.
//     * ВажностьПроблемы   - ПеречислениеСсылка.ВажностьПроблемыУчета - Важность, с которой следует
//                            регистрировать выявленные проблемы учета:
//                            "Информация", "Предупреждение", "Ошибка" и "ПолезныйСовет".
//
Процедура ПроверитьКомментарийВПоступленииТоваров(Проверка, ПараметрыПроверки) Экспорт
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.КонтрольВеденияУчета") Тогда
		Возврат;
	КонецЕсли;
	
	МодульКонтрольВеденияУчетаСлужебный = ОбщегоНазначения.ОбщийМодуль("КонтрольВеденияУчетаСлужебный");
	МодульКонтрольВеденияУчета          = ОбщегоНазначения.ОбщийМодуль("КонтрольВеденияУчета");
	
	Если МодульКонтрольВеденияУчетаСлужебный.ЭтоНеразделенныйОбъектМетаданных("Документ.ПоступлениеТоваров") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПоступлениеТоваров.Ссылка КАК Ссылка,
	|	ПоступлениеТоваров.Ответственный КАК Ответственный,
	|	ПоступлениеТоваров.Комментарий КАК Комментарий,
	|	ПоступлениеТоваров.МоментВремени КАК МоментВремени
	|ИЗ
	|	Документ.ПоступлениеТоваров КАК ПоступлениеТоваров
	|ГДЕ
	|	ПоступлениеТоваров.Комментарий ПОДОБНО """"
	|	И &ОграничениеПоДате
	|
	|УПОРЯДОЧИТЬ ПО
	|	МоментВремени УБЫВ");
	
	Если ЗначениеЗаполнено(ПараметрыПроверки.ДатаНачалаПроверки) Тогда
		ОграничениеПоДате = "ПоступлениеТоваров.Дата >= &ДатаНачалаПроверки";
	Иначе
		ОграничениеПоДате = "Истина";
	КонецЕсли;
		
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОграничениеПоДате", ОграничениеПоДате);
	Если ЗначениеЗаполнено(ПараметрыПроверки.ДатаНачалаПроверки) Тогда
		Запрос.УстановитьПараметр("ДатаНачалаПроверки", ПараметрыПроверки.ДатаНачалаПроверки);
	КонецЕсли;
	
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		
		Проблема                   = МодульКонтрольВеденияУчета.ОписаниеПроблемы(Результат.Ссылка, ПараметрыПроверки);
		Проблема.Ответственный     = Результат.Ответственный;
		Проблема.УточнениеПроблемы = ?(ЗначениеЗаполнено(Результат.Комментарий),
			НСтр("ru = 'В комментарии введены пробелы или табуляции.'"),
			НСтр("ru = 'Не введен комментарий в документе.'"));
		
		МодульКонтрольВеденияУчета.ЗаписатьПроблему(Проблема, ПараметрыПроверки);
		
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий подсистемы Подключаемые команды.

// См. ПодключаемыеКомандыПереопределяемый.ПриОпределенииКомандПодключенныхКОбъекту.
Процедура ПриОпределенииКомандПодключенныхКОбъекту(НастройкиФормы, Источники, ПодключенныеОтчетыИОбработки, Команды) Экспорт
	
	Найденные = ПодключенныеОтчетыИОбработки.НайтиСтроки(Новый Структура("ДобавитьКомандыОтправкиПриглашения", Истина));
	Для Каждого ПодключенныйОбъект Из Найденные Цикл
		ПодключенныйОбъект.Менеджер.ДобавитьКомандыОтправкиПриглашения(Команды, НастройкиФормы);
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий подсистемы Пользователи.

// См. ПользователиПереопределяемый.ПриОпределенииНазначенияРолей.
Процедура ПриОпределенииНазначенияРолей(НазначениеРолей) Экспорт
	
	// ТолькоДляВнешнихПользователей.
	НазначениеРолей.ТолькоДляВнешнихПользователей.Добавить(
		Метаданные.Роли.ЭДВАНС_ОплатаСчетовВнешнимиПользователями.Имя);
	
	НазначениеРолей.ТолькоДляВнешнихПользователей.Добавить(
		Метаданные.Роли.ЭДВАНС_ЧтениеДанныхОбъектовАвторизации.Имя);
	
	// СовместноДляПользователейИВнешнихПользователей.
	НазначениеРолей.СовместноДляПользователейИВнешнихПользователей.Добавить(
		Метаданные.Роли.ЭДВАНС_ЧтениеДанныхДляОтветовНаВопросыАнкет.Имя);
	
КонецПроцедуры

// См. ПользователиПереопределяемый.ПриУстановкеНачальныхНастроек.
Процедура ПриУстановкеНачальныхНастроек(НачальныеНастройки) Экспорт
	
	ГруппаСлева = Новый ГруппаНастройкиСоставаИнтерфейсаКлиентскогоПриложения;
	ГруппаСлева.Добавить(Новый ЭлементНастройкиСоставаИнтерфейсаКлиентскогоПриложения("ПанельРазделов"));
	
	ГруппаСверху = Новый ГруппаНастройкиСоставаИнтерфейсаКлиентскогоПриложения;
	ГруппаСверху.Добавить(Новый ЭлементНастройкиСоставаИнтерфейсаКлиентскогоПриложения("ПанельИнструментов"));
	ГруппаСверху.Добавить(Новый ЭлементНастройкиСоставаИнтерфейсаКлиентскогоПриложения("ПанельОткрытых"));
	
	НастройкиСостава = Новый НастройкиСоставаИнтерфейсаКлиентскогоПриложения;
	НастройкиСостава.Лево.Добавить(ГруппаСлева);
	НастройкиСостава.Верх.Добавить(ГруппаСверху);
	
	НачальныеНастройки.НастройкиКлиента.ВариантИнтерфейсаКлиентскогоПриложения = ВариантИнтерфейсаКлиентскогоПриложения.Такси;
	НачальныеНастройки.НастройкиИнтерфейса.ОтображениеПанелиРазделов = ОтображениеПанелиРазделов.КартинкаИТекст;
	НачальныеНастройки.НастройкиТакси.УстановитьСостав(НастройкиСостава);
	
КонецПроцедуры

// См. ПользователиПереопределяемый.ПриПолученииПрочихНастроек.
Процедура ПриПолученииПрочихНастроек(СведенияОПользователе, Настройки) Экспорт
	
	// Получение значения настройки ЗапрашиватьПодтверждениеПриЗавершенииПрограммы.
	ЗначениеНастройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"ОбщиеНастройкиПользователя", "ЗапрашиватьПодтверждениеПриЗавершенииПрограммы",,,
			СведенияОПользователе.ИмяПользователяИнформационнойБазы);
	
	Если ЗначениеНастройки <> Неопределено Тогда
		
		СписокЗначенийНастройки = Новый СписокЗначений;
		СписокЗначенийНастройки.Добавить(ЗначениеНастройки);
		
		ИнформацияОНастройке    = Новый Структура;
		ИнформацияОНастройке.Вставить("НазваниеНастройки", НСтр("ru = 'Подтверждение при закрытии программы'"));
		ИнформацияОНастройке.Вставить("КартинкаНастройки", "");
		ИнформацияОНастройке.Вставить("СписокНастроек", СписокЗначенийНастройки);
		
		Настройки.Вставить("ЗапрашиватьПодтверждениеОЗакрытии", ИнформацияОНастройке);
	КонецЕсли;
	
КонецПроцедуры

// См. ПользователиПереопределяемый.ПриСохраненииПрочихНастроек.
Процедура ПриСохраненииПрочихНастроек(СведенияОПользователе, Настройки) Экспорт
	
	Если Настройки.ИдентификаторНастройки = "ЗапрашиватьПодтверждениеОЗакрытии" Тогда
		ЗначениеНастройки = Настройки.ЗначениеНастройки[0];
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
			"ОбщиеНастройкиПользователя", "ЗапрашиватьПодтверждениеПриЗавершенииПрограммы",
			ЗначениеНастройки.Значение,, СведенияОПользователе.ИмяПользователяИнформационнойБазы);
	КонецЕсли;
	
КонецПроцедуры

// См. ПользователиПереопределяемый.ПриУдаленииПрочихНастроек.
Процедура ПриУдаленииПрочихНастроек(СведенияОПользователе, Настройки) Экспорт
	
	Если Настройки.ИдентификаторНастройки = "ЗапрашиватьПодтверждениеОЗакрытии" Тогда
		ОбщегоНазначения.ХранилищеОбщихНастроекУдалить(
			"ОбщиеНастройкиПользователя", "ЗапрашиватьПодтверждениеПриЗавершенииПрограммы",
			СведенияОПользователе.ИмяПользователяИнформационнойБазы);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий подсистемы УправлениеДоступом.

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииВидовДоступа.
Процедура ПриЗаполненииВидовДоступа(ВидыДоступа) Экспорт
	
	ВидДоступа = ВидыДоступа.Добавить();
	ВидДоступа.Имя = "ГруппыНоменклатуры";
	ВидДоступа.Представление    = НСтр("ru = 'Группы номенклатуры'");
	ВидДоступа.ТипЗначений      = Тип("СправочникСсылка.Номенклатура");
	ВидДоступа.ТипГруппЗначений = Тип("СправочникСсылка.ГруппыДоступаНоменклатуры");
	УправлениеДоступом.ДобавитьДополнительныеТипыВидаДоступа(ВидДоступа,
		Тип("СправочникСсылка.ВидыНоменклатуры"),
		Тип("СправочникСсылка.ГруппыДоступаНоменклатуры"));
	
	ВидДоступа = ВидыДоступа.Добавить();
	ВидДоступа.Имя = "Кассы";
	ВидДоступа.Представление = НСтр("ru = 'Кассы'");
	ВидДоступа.ТипЗначений   = Тип("СправочникСсылка.Кассы");
	УправлениеДоступом.ДобавитьДополнительныеТипыВидаДоступа(ВидДоступа,
		Тип("СправочникСсылка.КассыККМ"));
	
	ВидДоступа = ВидыДоступа.Добавить();
	ВидДоступа.Имя = "МестаХранения";
	ВидДоступа.Представление = НСтр("ru = 'Места хранения'");
	ВидДоступа.ТипЗначений   = Тип("СправочникСсылка.МестаХранения");
	
	ВидДоступа = ВидыДоступа.Добавить();
	ВидДоступа.Имя = "ГруппыПартнеров";
	ВидДоступа.Представление    = НСтр("ru = 'Группы партнеров'");
	ВидДоступа.ТипЗначений      = Тип("СправочникСсылка.Партнеры");
	ВидДоступа.ТипГруппЗначений = Тип("СправочникСсылка.ГруппыДоступаПартнеров");
	
	ВидДоступа = ВидыДоступа.Добавить();
	ВидДоступа.Имя = "ФизическиеЛица";
	ВидДоступа.Представление    = НСтр("ru = 'Физические лица'");
	ВидДоступа.ТипЗначений      = Тип("СправочникСсылка.ФизическиеЛица");
	
	ВидДоступа = ВидыДоступа.Добавить();
	ВидДоступа.Имя = "ХозяйственныеОперации";
	ВидДоступа.Представление = НСтр("ru = 'Хозяйственные операции'");
	ВидДоступа.ТипЗначений   = Тип("ПеречислениеСсылка.ХозяйственныеОперации");
	
	ВидДоступа = ВидыДоступа.Добавить();
	ВидДоступа.Имя = "Организации";
	ВидДоступа.Представление = НСтр("ru = 'Организации'");
	ВидДоступа.ТипЗначений   = Тип("СправочникСсылка.Организации");
	
КонецПроцедуры

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииПоставляемыхПрофилейГруппДоступа.
Процедура ПриЗаполненииПоставляемыхПрофилейГруппДоступа(ОписанияПрофилей, ПараметрыОбновления) Экспорт
	
	ЗаполнитьПрофильПользователь(ОписанияПрофилей);
	ЗаполнитьПрофильМенеджер(ОписанияПрофилей);
	ЗаполнитьПрофильКладовщик(ОписанияПрофилей);
	ЗаполнитьПрофильРуководитель(ОписанияПрофилей);
	ЗаполнитьПрофильБухгалтер(ОписанияПрофилей);
	ЗаполнитьПрофильРасчетчикЗарплаты(ОписанияПрофилей);
	ЗаполнитьПрофильАудитор(ОписанияПрофилей);
	ЗаполнитьПрофильПартнер(ОписанияПрофилей);
	
	// Дополнительные профили, которые не используются самостоятельно при настройке
	// прав пользователя, а дополняют основные профили, перечисленные выше.
	
	ЗаполнитьПрофильОтветственныйЗаНормативноСправочнуюИнформацию(ОписанияПрофилей);
	ЗаполнитьПрофильОтветственныйЗаВедениеНоменклатуры(ОписанияПрофилей);
	ЗаполнитьПрофильОтветственныйЗаВедениеВзаимодействий(ОписанияПрофилей);
	ЗаполнитьПрофильОтветственныйЗаСписокПользователей(ОписанияПрофилей);
	ЗаполнитьПрофильОтветственныйЗаСписокВнешнихПользователей(ОписанияПрофилей);
	ЗаполнитьПрофильОтветственныйЗаСоставыУчастниковГруппДоступа(ОписанияПрофилей);
	ЗаполнитьПрофильНастройкаСинхронизацииФайловСОблачнымСервисом(ОписанияПрофилей);
	ЗаполнитьПрофильОтветственныйЗаДатыЗапретаИзмененияДанных(ОписанияПрофилей);
	ЗаполнитьПрофильИспользованиеЭлектроннойПочты(ОписанияПрофилей);
	ЗаполнитьПрофильПечатьНепроведенныхДокументов(ОписанияПрофилей);
	ЗаполнитьПрофильРаботаСПапкамиФайлов(ОписанияПрофилей);
	ЗаполнитьПрофильРедактированиеСогласийНаОбработкуПерсональныхДанных(ОписанияПрофилей);
	ЗаполнитьПрофильПросмотрСогласийНаОбработкуПерсональныхДанных(ОписанияПрофилей);
	
	УправлениеПечатью.ЗаполнитьПрофильРедактированиеПечатныхФорм(ОписанияПрофилей);
	
КонецПроцедуры

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииЗависимостейПравДоступа.
Процедура ПриЗаполненииЗависимостейПравДоступа(ЗависимостиПрав) Экспорт
	
КонецПроцедуры

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииИспользованияВидаДоступа.
Процедура ПриЗаполненииИспользованияВидаДоступа(ВидДоступа, Использование) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ВидДоступа = "ГруппыНоменклатуры" Тогда
		Использование = Константы.ОграничиватьДоступПоНоменклатуре.Получить();
		
	ИначеЕсли ВидДоступа = "ГруппыПартнеров" Тогда
		Использование = Константы.ОграничиватьДоступПоПартнерам.Получить();
		
	ИначеЕсли ВидДоступа = "ФизическиеЛица" Тогда
		Использование = Константы.ОграничиватьДоступПоФизическимЛицам.Получить();
	КонецЕсли;
	
КонецПроцедуры

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииВидовОграниченийПравОбъектовМетаданных.
Процедура ПриЗаполненииВидовОграниченийПравОбъектовМетаданных(Описание) Экспорт
	
	// Организации
	Описание = Описание + "
	|Справочник.Организации.Чтение.Организации
	|";
	
	// РаботаСФайлами
	Описание = Описание + "
	|Справочник.ВерсииФайлов.Чтение.Объект.Документ.ЗаказПокупателя
	|Справочник.ВерсииФайлов.Чтение.Объект.Справочник.Номенклатура
	|Справочник.ВерсииФайлов.Чтение.Объект.Справочник.Партнеры
	|Справочник.ВерсииФайлов.Изменение.Объект.Документ.ЗаказПокупателя
	|Справочник.ВерсииФайлов.Изменение.Объект.Справочник.Номенклатура
	|Справочник.ВерсииФайлов.Изменение.Объект.Справочник.Партнеры
	|Справочник.Файлы.Чтение.ВнешниеПользователи
	|Справочник.Файлы.Чтение.Объект.Документ.ЗаказПокупателя
	|Справочник.Файлы.Чтение.Объект.Справочник.Номенклатура
	|Справочник.Файлы.Чтение.Объект.Справочник.Партнеры
	|Справочник.Файлы.Изменение.Объект.Документ.ЗаказПокупателя
	|Справочник.Файлы.Изменение.Объект.Справочник.Номенклатура
	|Справочник.Файлы.Изменение.Объект.Справочник.Партнеры
	|";
	
	// УправлениеДоступом
	Описание = Описание + "
	|Справочник.ВидыНоменклатуры.Изменение.ГруппыНоменклатуры
	|Справочник.Номенклатура.Изменение.ГруппыНоменклатуры
	|Справочник.НоменклатураПрисоединенныеФайлы.Изменение.ГруппыНоменклатуры
	|";
	
	
	// Другие ЭДВАНС объекты.
	Описание = Описание + "
	|Справочник.БанковскиеСчета.Чтение.ГруппыПартнеров
	|Справочник.БанковскиеСчета.Чтение.Организации
	|Справочник.БанковскиеСчета.Изменение.ГруппыПартнеров
	|Справочник.БанковскиеСчета.Изменение.Организации
	|Справочник.БанковскиеСчета.Чтение.ВнешниеПользователи
	|Справочник.ГруппыДоступаПартнеров.Чтение.ГруппыПартнеров
	|Справочник.ДоговорыКонтрагентов.Чтение.ГруппыПартнеров
	|Справочник.ДоговорыКонтрагентов.Чтение.Организации
	|Справочник.ДоговорыКонтрагентов.Изменение.ГруппыПартнеров
	|Справочник.ДоговорыКонтрагентов.Изменение.Организации
	|Справочник.МестаХранения.Чтение.МестаХранения
	|Справочник.Кассы.Изменение.Организации
	|Справочник.КассыККМ.Изменение.Организации
	|Справочник.КонтактныеЛицаПартнеров.Чтение.ВнешниеПользователи
	|Справочник.КонтактныеЛицаПартнеров.Чтение.ГруппыПартнеров
	|Справочник.КонтактныеЛицаПартнеров.Изменение.ГруппыПартнеров
	|Справочник.Контрагенты.Чтение.ГруппыПартнеров
	|Справочник.Контрагенты.Изменение.ГруппыПартнеров
	|Справочник.Контрагенты.Чтение.ВнешниеПользователи
	|Справочник.Партнеры.Чтение.ГруппыПартнеров
	|Справочник.Партнеры.Чтение.ВнешниеПользователи
	|Справочник.Партнеры.Изменение.ГруппыПартнеров
	|Справочник.Проекты.Чтение.Организации
	|Справочник.Проекты.Изменение.Организации
	|Справочник.ПроектыПрисоединенныеФайлы.Чтение.Организации
	|Справочник.ПроектыПрисоединенныеФайлы.Изменение.Организации
	|Справочник.СчетНаОплатуПокупателюПрисоединенныеФайлы.Чтение.ГруппыПартнеров
	|Справочник.СчетНаОплатуПокупателюПрисоединенныеФайлы.Чтение.Организации
	|Справочник.СчетНаОплатуПокупателюПрисоединенныеФайлы.Изменение.ГруппыПартнеров
	|Справочник.СчетНаОплатуПокупателюПрисоединенныеФайлы.Изменение.Организации
	|Справочник.СчетНаОплатуПокупателюПрисоединенныеФайлы.Чтение.ВнешниеПользователи
	|Справочник.СчетНаОплатуПокупателюПрисоединенныеФайлы.Изменение.ВнешниеПользователи
	|Документ.НачислениеЗарплаты.Чтение.Объект.Документ.НачислениеЗарплаты
	|Документ.НачислениеЗарплаты.Изменение.Объект.Документ.НачислениеЗарплаты
	|Документ.ЗаказПокупателя.Чтение.Организации
	|Документ.ЗаказПокупателя.Чтение.ГруппыПартнеров
	|Документ.ЗаказПокупателя.Изменение.Организации
	|Документ.ЗаказПокупателя.Изменение.ГруппыПартнеров
	|Документ.ОприходованиеТоваров.Чтение.МестаХранения
	|Документ.ОприходованиеТоваров.Чтение.Организации
	|Документ.ОприходованиеТоваров.Изменение.МестаХранения
	|Документ.ОприходованиеТоваров.Изменение.Организации
	|Документ.ОприходованиеТоваров.Изменение.Пользователи
	|Документ.ПеремещениеТоваров.Чтение.МестаХранения
	|Документ.ПеремещениеТоваров.Чтение.Организации
	|Документ.ПеремещениеТоваров.Изменение.МестаХранения
	|Документ.ПеремещениеТоваров.Изменение.Организации
	|Документ.ПеремещениеТоваров.Изменение.Пользователи
	|Документ.ПоступлениеТоваров.Чтение.ГруппыПартнеров
	|Документ.ПоступлениеТоваров.Чтение.МестаХранения
	|Документ.ПоступлениеТоваров.Чтение.Организации
	|Документ.ПоступлениеТоваров.Изменение.ГруппыПартнеров
	|Документ.ПоступлениеТоваров.Изменение.МестаХранения
	|Документ.ПоступлениеТоваров.Изменение.Организации
	|Документ.РасходныйКассовыйОрдер.Чтение.Организации
	|Документ.РасходныйКассовыйОрдер.Чтение.Кассы
	|Документ.РасходныйКассовыйОрдер.Чтение.ХозяйственныеОперации
	|Документ.РасходныйКассовыйОрдер.Изменение.Организации
	|Документ.РасходныйКассовыйОрдер.Изменение.Кассы
	|Документ.РасходныйКассовыйОрдер.Изменение.ХозяйственныеОперации
	|Документ.РеализацияТоваров.Чтение.ГруппыПартнеров
	|Документ.РеализацияТоваров.Чтение.МестаХранения
	|Документ.РеализацияТоваров.Чтение.Организации
	|Документ.РеализацияТоваров.Изменение.ГруппыПартнеров
	|Документ.РеализацияТоваров.Изменение.МестаХранения
	|Документ.РеализацияТоваров.Изменение.Организации
	|Документ.СписаниеТоваров.Чтение.МестаХранения
	|Документ.СписаниеТоваров.Чтение.Организации
	|Документ.СписаниеТоваров.Изменение.МестаХранения
	|Документ.СписаниеТоваров.Изменение.Организации
	|Документ.СписаниеТоваров.Изменение.Пользователи
	|Документ.СчетНаОплатуПокупателю.Чтение.ГруппыПартнеров
	|Документ.СчетНаОплатуПокупателю.Чтение.Организации
	|Документ.СчетНаОплатуПокупателю.Изменение.ГруппыПартнеров
	|Документ.СчетНаОплатуПокупателю.Изменение.Организации
	|Документ.СчетНаОплатуПокупателю.Чтение.ВнешниеПользователи
	|Документ.СчетФактураПолученный.Чтение.ГруппыПартнеров
	|Документ.СчетФактураПолученный.Изменение.ГруппыПартнеров
	|ЖурналДокументов.СкладскиеДокументы.Чтение.Объект.Документ.ОприходованиеТоваров
	|ЖурналДокументов.СкладскиеДокументы.Чтение.Объект.Документ.ПеремещениеТоваров
	|ЖурналДокументов.СкладскиеДокументы.Чтение.Объект.Документ.СписаниеТоваров
	|РегистрСведений.РеестрСкладскихДокументов.Чтение.МестаХранения
	|РегистрСведений.РеестрСкладскихДокументов.Чтение.Организации
	|РегистрСведений.РаботникиОрганизаций.Чтение.ФизическиеЛица
	|РегистрСведений.РаботникиОрганизаций.Чтение.Организации
	|РегистрСведений.РаботникиОрганизаций.Изменение.ФизическиеЛица
	|РегистрСведений.РаботникиОрганизаций.Изменение.Организации
	|РегистрНакопления.ОстаткиТоваровВМестахХранения.Чтение.МестаХранения
	|РегистрНакопления.ОстаткиТоваровВМестахХранения.Чтение.Организации
	|";
	
КонецПроцедуры

// См. УправлениеДоступомПереопределяемый.ПриИзмененииНаборовЗначенийДоступа.
Процедура ПриИзмененииНаборовЗначенийДоступа(Ссылка, СсылкиНаЗависимыеОбъекты) Экспорт
	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий подсистемы ЭлектроннаяПодпись.

// См. ЭлектроннаяПодписьПереопределяемый.ПриЗаполненииРеквизитовОрганизацииВЗаявленииНаСертификат.
Процедура ПриЗаполненииРеквизитовОрганизацииВЗаявленииНаСертификат(Параметры) Экспорт
	
	Если Не ЗначениеЗаполнено(Параметры.Организация) Тогда
		ОрганизацияПоУмолчанию = Справочники.Организации.ОрганизацияПоУмолчанию();
		Если ЗначениеЗаполнено(ОрганизацияПоУмолчанию) Тогда
			Параметры.Организация = ОрганизацияПоУмолчанию;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.Организация) Тогда
		Возврат; // Поля можно заполнить только, если организация указана.
	КонецЕсли;
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Организация,
		"НаименованиеСокращенное, НаименованиеПолное,
		|ИндивидуальныйПредприниматель, ИНН, КПП, ОГРН,
		|РасчетныйСчет,БИК,КорреспондентскийСчет");
	
	Параметры.НаименованиеСокращенное = Реквизиты.НаименованиеСокращенное;
	Параметры.НаименованиеПолное      = Реквизиты.НаименованиеПолное;
	Параметры.ЭтоИндивидуальныйПредприниматель = ЗначениеЗаполнено(Реквизиты.ИндивидуальныйПредприниматель);
	Параметры.ИНН  = Реквизиты.ИНН;
	Параметры.КПП  = Реквизиты.КПП;
	Параметры.ОГРН = Реквизиты.ОГРН;
	Параметры.РасчетныйСчет         = Реквизиты.РасчетныйСчет;
	Параметры.БИК                   = Реквизиты.БИК;
	Параметры.КорреспондентскийСчет = Реквизиты.КорреспондентскийСчет;
	
	Объекты = Новый Массив;
	Объекты.Добавить(Параметры.Организация);
	
	ВидыКИ = Новый Массив;
	ВидыКИ.Добавить(Справочники.ВидыКонтактнойИнформации.ЮридическийАдресОрганизации);
	ВидыКИ.Добавить(Справочники.ВидыКонтактнойИнформации.ФактическийАдресОрганизации);
	ВидыКИ.Добавить(Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
	
	КонтактнаяИнформация = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(Объекты, , ВидыКИ, ТекущаяДатаСеанса());
	
	Строка = КонтактнаяИнформация.Найти(Справочники.ВидыКонтактнойИнформации.ЮридическийАдресОрганизации, "Вид");
	Если Строка <> Неопределено Тогда
		Параметры.ЮридическийАдрес = Строка.ЗначенияПолей;
	КонецЕсли;
	
	Строка = КонтактнаяИнформация.Найти(Справочники.ВидыКонтактнойИнформации.ФактическийАдресОрганизации, "Вид");
	Если Строка <> Неопределено Тогда
		Параметры.ФактическийАдрес = Строка.ЗначенияПолей;
	КонецЕсли;
	
	Строка = КонтактнаяИнформация.Найти(Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации, "Вид");
	Если Строка <> Неопределено Тогда
		Параметры.Телефон = Строка.ЗначенияПолей
	КонецЕсли;
	
КонецПроцедуры

// См. ЭлектроннаяПодписьПереопределяемый.ПриЗаполненииРеквизитовВладельцаВЗаявленииНаСертификат.
Процедура ПриЗаполненииРеквизитовВладельцаВЗаявленииНаСертификат(Параметры) Экспорт
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Контрагенты"));
	Параметры.ТипВладельца = Новый ОписаниеТипов(МассивТипов);
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Организация,
		"Директор, ГлавныйБухгалтер, ИндивидуальныйПредприниматель");
	
	Если ЗначениеЗаполнено(Реквизиты.ИндивидуальныйПредприниматель) Тогда
		Если Не ЗначениеЗаполнено(Параметры.Сотрудник) Тогда
			Параметры.Сотрудник = Реквизиты.ИндивидуальныйПредприниматель;
		КонецЕсли;
	Иначе
		Параметры.Директор         = Реквизиты.Директор;
		Параметры.ГлавныйБухгалтер = Реквизиты.ГлавныйБухгалтер;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.Сотрудник) Тогда
		// Начальное значение для сотрудника.
		Если ЗначениеЗаполнено(Параметры.Директор) Тогда
			Параметры.Сотрудник = Параметры.Директор;
			
		ИначеЕсли ЗначениеЗаполнено(Параметры.ГлавныйБухгалтер) Тогда
			Параметры.Сотрудник = Параметры.ГлавныйБухгалтер;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.Сотрудник) Тогда
		Возврат; // Поля можно заполнить, если сотрудник указан.
	КонецЕсли;
	
	Если Параметры.Сотрудник = Параметры.Директор Тогда
		Параметры.Должность = НСтр("ru = 'Генеральный директор'");
		
	ИначеЕсли Параметры.Сотрудник = Параметры.ГлавныйБухгалтер Тогда
		Параметры.Должность = НСтр("ru = 'Главный бухгалтер'");
	Иначе
		Параметры.Должность = НСтр("ru = 'Менеджер'");
	КонецЕсли;
	
	Если ТипЗнч(Параметры.Сотрудник) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Сотрудник,
			"Наименование, ДатаРождения, Пол, МестоРождения, Гражданство, СНИЛС, СерияДокумента,
			|НомерДокумента, КемВыданДокумент, КодПодразделенияДокумента, ДатаВыдачиДокумента");
	Иначе
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Сотрудник, "Наименование");
	КонецЕсли;
	
	Массив = СтрРазделить(Реквизиты.Наименование, " ", Ложь);
	Если Массив.Количество() > 0 Тогда
		Параметры.Фамилия = Массив[0];
	КонецЕсли;
	Если Массив.Количество() > 1 Тогда
		Параметры.Имя = Массив[1];
	КонецЕсли;
	Если Массив.Количество() > 2 Тогда
		Параметры.Отчество = Массив[2];
	КонецЕсли;
	
	Если ТипЗнч(Параметры.Сотрудник) <> Тип("СправочникСсылка.ФизическиеЛица") Тогда
		Возврат;
	КонецЕсли;
	
	Если Реквизиты.Пол = Перечисления.ПолФизическогоЛица.Мужской Тогда
		Параметры.Пол = "Мужской";
		
	ИначеЕсли Реквизиты.Пол = Перечисления.ПолФизическогоЛица.Женский Тогда
		Параметры.Пол = "Женский";
	КонецЕсли;
	
	Параметры.ДатаРождения             = Реквизиты.ДатаРождения;
	Параметры.МестоРождения            = Реквизиты.МестоРождения;
	Параметры.Гражданство              = Реквизиты.Гражданство;
	Параметры.СтраховойНомерПФР        = Реквизиты.СНИЛС;
	Параметры.ДокументВид              = "21";
	Параметры.ДокументНомер            = Реквизиты.СерияДокумента + Реквизиты.НомерДокумента;
	Параметры.ДокументКемВыдан         = Реквизиты.КемВыданДокумент;
	Параметры.ДокументКодПодразделения = Реквизиты.КодПодразделенияДокумента;
	Параметры.ДокументДатаВыдачи       = Реквизиты.ДатаВыдачиДокумента;
	
	Объекты = Новый Массив;
	Объекты.Добавить(Параметры.Сотрудник);
	
	ВидыКИ = Новый Массив;
	ВидыКИ.Добавить(Справочники.ВидыКонтактнойИнформации.EmailФизическогоЛица);
	
	КонтактнаяИнформация = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(Объекты, , ВидыКИ);
	
	Строка = КонтактнаяИнформация.Найти(Справочники.ВидыКонтактнойИнформации.EmailФизическогоЛица, "Вид");
	Если Строка <> Неопределено Тогда
		Параметры.ЭлектроннаяПочта = Строка.ЗначенияПолей;
	КонецЕсли;
	
КонецПроцедуры

// См. ЭлектроннаяПодписьПереопределяемый.ПриЗаполненииРеквизитовРуководителяВЗаявленииНаСертификат.
Процедура ПриЗаполненииРеквизитовРуководителяВЗаявленииНаСертификат(Параметры) Экспорт
	
	Параметры.ТипРуководителя = Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица");
	
	Директор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Организация, "Директор");
	Если Не ЗначениеЗаполнено(Параметры.Руководитель) Тогда
		Параметры.Руководитель = Директор;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.Руководитель) Тогда
		Возврат; // Поля можно заполнить только, если руководитель указан.
	КонецЕсли;
	
	Если Параметры.Руководитель = Директор Тогда
		Параметры.Должность = НСтр("ru = 'Генеральный директор'");
		Параметры.Основание = НСтр("ru = 'Устав'");
	КонецЕсли;
	
КонецПроцедуры

// См. ЭлектроннаяПодписьПереопределяемый.ПриЗаполненииРеквизитовПартнераВЗаявленииНаСертификат.
Процедура ПриЗаполненииРеквизитовПартнераВЗаявленииНаСертификат(Параметры) Экспорт
	
	Параметры.ТипПартнера = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");
	
	Если Не ЗначениеЗаполнено(Параметры.Партнер) Тогда
		Параметры.Партнер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Организация,
			"ИнформационноеОбслуживание");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.Партнер) Тогда
		Возврат; // Поля можно заполнить только, если партнер указан.
	КонецЕсли;
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Партнер, "ИНН, КПП, ВидКонтрагента");
	
	Параметры.ЭтоИндивидуальныйПредприниматель =
		Реквизиты.ВидКонтрагента = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
	
	Параметры.ИНН = Реквизиты.ИНН;
	Параметры.КПП = Реквизиты.КПП;
	
КонецПроцедуры

// См. ЭлектроннаяПодписьПереопределяемый.ПередНачаломРедактированияСертификатаКлюча.
Процедура ПередНачаломРедактированияСертификатаКлюча(Ссылка, Сертификат, ПараметрыРеквизитов) Экспорт
	     
		
КонецПроцедуры

// См. ЭлектроннаяПодписьПереопределяемый.ПриСозданииФормыПроверкаСертификата.
Процедура ПриСозданииФормыПроверкаСертификата(Сертификат, ДополнительныеПроверки, ПараметрыДополнительныхПроверок,
			СтандартныеПроверки, ВводитьПароль) Экспорт
	
	НоваяПроверка = ДополнительныеПроверки.Добавить();
	НоваяПроверка.Имя = "ТестСвязиСОператором";
	НоваяПроверка.Представление = НСтр("ru = 'Дополнительная проверка сертификата (пример)'");
	НоваяПроверка.Подсказка     = НСтр("ru = 'Подсказка к дополнительной проверке сертификата (пример)'");
	
КонецПроцедуры

// См. ЭлектроннаяПодписьПереопределяемый.ПриДополнительнойПроверкеСертификата.
Процедура ПриДополнительнойПроверкеСертификата(Параметры) Экспорт
	
	Если Параметры.Проверка = "ТестСвязиСОператором" Тогда
		ОписаниеОшибки = "";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Реализация события ПриЗаполненииПоставляемыхПрофилейГруппДоступа.

// Основные профили.

Процедура ЗаполнитьПрофильПользователь(Знач ОписанияПрофилей)
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "Пользователь";
	ОписаниеПрофиля.Идентификатор = "09e56dbf-90a0-11de-862c-001d600d9ad2";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Пользователь'", Метаданные.ОсновнойЯзык.КодЯзыка);
	ОписаниеПрофиля.Описание =
		НСтр("ru = 'Общие разрешенные действия для большинства пользователей.
		           |Как правило, это права на просмотр данных информационной системы.'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	
	// Использование 1С:Предприятия.
	ОписаниеПрофиля.Роли.Добавить("ЗапускВебКлиента");
	ОписаниеПрофиля.Роли.Добавить("ЗапускТолстогоКлиента");
	ОписаниеПрофиля.Роли.Добавить("ЗапускТонкогоКлиента");
	ОписаниеПрофиля.Роли.Добавить("ВыводНаПринтерФайлБуферОбмена");
	ОписаниеПрофиля.Роли.Добавить("СохранениеДанныхПользователя");
	
	// Использование программы.
	ДобавитьРолиНаВсеРазделыКомандногоИнтерфейса(ОписаниеПрофиля);
	ОписаниеПрофиля.Роли.Добавить("БазовыеПрава");
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваБТС");
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваИПП");
	ОписаниеПрофиля.Роли.Добавить("ПросмотрОписанияИзмененийПрограммы");
	ОписаниеПрофиля.Роли.Добавить("РедактированиеПечатныхФорм");
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваПользователяБСП");
	ОписаниеПрофиля.Роли.Добавить("РаботаСФайлами");
	ОписаниеПрофиля.Роли.Добавить("МоиНастройки");
	
	// Использование НСИ.
	ОписаниеПрофиля.Роли.Добавить("ЧтениеГрафиковРаботы");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеКурсовВалют");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеНСИ");
	
	// Типовые возможности.
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеЛичныхВариантовОтчетов");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеДополнительныхОтчетовИОбработок");
	ОписаниеПрофиля.Роли.Добавить("ПросмотрСвязанныеДокументы");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеЭлектронныхПодписейИШифрование");
	ОписаниеПрофиля.Роли.Добавить("ИспользованиеОбработкиТекущиеДела");
	
	// Основные возможности профиля.
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеЗаметок");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеНапоминаний");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеПроектов");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеЗаданий");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеЗаданийСРолевойАдресацией");
	ОписаниеПрофиля.Роли.Добавить("ИзменениеВыполнениеЗадач");
	
	// Анкетирование
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеОтветовНаВопросыАнкет");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеОтветовНаВопросыАнкет");
	
	// Виды ограничения доступа профиля.
	ОписаниеПрофиля.ВидыДоступа.Добавить("МестаХранения");
	ОписаниеПрофиля.ВидыДоступа.Добавить("Организации");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ГруппыПартнеров");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ГруппыНоменклатуры");
	ОписаниеПрофиля.ВидыДоступа.Добавить("Пользователи", "Предустановленный");
	
	// Использование онлайн-поддержки
	ОписаниеПрофиля.Роли.Добавить("ВызовОнлайнПоддержки");
	ОписаниеПрофиля.Роли.Добавить("ВызовОнлайнПоддержки");
	ОписаниеПрофиля.Роли.Добавить("ПодключениеКСервисуИнтернетПоддержки");
	
	// Использование подсистемы контроля ведения учета.
	ОписаниеПрофиля.Роли.Добавить("ЧтениеРезультатовПроверкиУчета");
	
	ОписанияПрофилей.Добавить(ОписаниеПрофиля);
	
КонецПроцедуры

Процедура ЗаполнитьПрофильМенеджер(Знач ОписанияПрофилей)
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "Менеджер";
	ОписаниеПрофиля.Идентификатор = "c7e34f11-9890-11df-b54f-e0cb4ed5f655";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Менеджер'", Метаданные.ОсновнойЯзык.КодЯзыка);
	ОписаниеПрофиля.Описание =
		НСтр("ru = 'Предназначен для настройки групп доступа, демонстрирующих
		           |работу пользователей по вводу и изменению данных различных подсистем в разрезе различных
		           |видов доступа. В частности:
		           |- проведение и анализ результатов опросов (подсистема ""Анкетирование"");
		           |- ведение дополнительных сведений (подсистема ""Свойства"");
		           |- редактирование проектов и их присоединенных файлов (подсистема ""Присоединенные файлы"").
		           |
		           |Кроме того, в отличие от профилей ""Руководитель"" и ""Бухгалтер"", менеджерам вообще
		           |не доступны документы ""Расходный кассовый ордер"".'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	
	// Использование 1С:Предприятия.
	ОписаниеПрофиля.Роли.Добавить("ЗапускВебКлиента");
	ОписаниеПрофиля.Роли.Добавить("ЗапускТолстогоКлиента");
	ОписаниеПрофиля.Роли.Добавить("ЗапускТонкогоКлиента");
	ОписаниеПрофиля.Роли.Добавить("ВыводНаПринтерФайлБуферОбмена");
	ОписаниеПрофиля.Роли.Добавить("СохранениеДанныхПользователя");
	
	// Использование программы.
	ДобавитьРолиНаВсеРазделыКомандногоИнтерфейса(ОписаниеПрофиля);
	ОписаниеПрофиля.Роли.Добавить("ПодсистемаАнкетирование");
	ОписаниеПрофиля.Роли.Добавить("БазовыеПрава");
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваБТС");
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваИПП");
	ОписаниеПрофиля.Роли.Добавить("ПросмотрОписанияИзмененийПрограммы");
	ОписаниеПрофиля.Роли.Добавить("РедактированиеПечатныхФорм");
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваПользователяБСП");
	ОписаниеПрофиля.Роли.Добавить("РаботаСФайлами");
	ОписаниеПрофиля.Роли.Добавить("МоиНастройки");
	
	// Использование НСИ.
	ОписаниеПрофиля.Роли.Добавить("ЧтениеГрафиковРаботы");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеКурсовВалют");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеНСИ");
	
	// Типовые возможности.
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеЛичныхВариантовОтчетов");
	ОписаниеПрофиля.Роли.Добавить("ПросмотрСвязанныеДокументы");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеЭлектронныхПодписейИШифрование");
	ОписаниеПрофиля.Роли.Добавить("ИзменениеДополнительныхСведений");
	ОписаниеПрофиля.Роли.Добавить("ИспользованиеОбработкиТекущиеДела");
	
	// Основные возможности профиля.
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеДокументовПокупателей");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеПроектов");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеСкладскихДокументов");
	ОписаниеПрофиля.Роли.Добавить("ПечатьСчетаНаОплатуНаПринтер");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеОпросов");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеШаблоновАнкет");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеОтветовНаВопросыАнкет");
	
	// Использование подсистемы контроля ведения учета.
	ОписаниеПрофиля.Роли.Добавить("ЧтениеРезультатовПроверкиУчета");
	
	// Виды ограничения доступа профиля.
	ОписаниеПрофиля.ВидыДоступа.Добавить("МестаХранения", "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("Организации");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ГруппыПартнеров");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ГруппыНоменклатуры");
	ОписаниеПрофиля.ВидыДоступа.Добавить("Пользователи", "Предустановленный");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ДополнительныеСведения", "ВначалеВсеЗапрещены");
	
	ОписанияПрофилей.Добавить(ОписаниеПрофиля);
	
КонецПроцедуры

Процедура ЗаполнитьПрофильКладовщик(Знач ОписанияПрофилей)
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "Кладовщик";
	ОписаниеПрофиля.Идентификатор = "17a7b55d-4f89-11e4-9e14-005056c00008";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Кладовщик'", Метаданные.ОсновнойЯзык.КодЯзыка);
	ОписаниеПрофиля.Описание =
		НСтр("ru = 'Предназначен для настройки групп доступа, демонстрирующих
		           |работу пользователей по вводу и изменению данных различных подсистем в разрезе различных
		           |видов доступа. В частности:
		           |- ведение дополнительных сведений (подсистема ""Свойства"");
		           |- редактирование проектов и их присоединенных файлов (подсистема ""Присоединенные файлы"").
		           |
		           |Кроме того, в отличие от профилей ""Руководитель"" и ""Бухгалтер"", кладовщикам вообще
		           |не доступны документы ""Расходный кассовый ордер"".'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	
	// Использование 1С:Предприятия.
	ОписаниеПрофиля.Роли.Добавить("ЗапускВебКлиента");
	ОписаниеПрофиля.Роли.Добавить("ЗапускТолстогоКлиента");
	ОписаниеПрофиля.Роли.Добавить("ЗапускТонкогоКлиента");
	ОписаниеПрофиля.Роли.Добавить("ВыводНаПринтерФайлБуферОбмена");
	ОписаниеПрофиля.Роли.Добавить("СохранениеДанныхПользователя");
	
	// Использование программы.
	ДобавитьРолиНаВсеРазделыКомандногоИнтерфейса(ОписаниеПрофиля);
	ОписаниеПрофиля.Роли.Добавить("БазовыеПрава");
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваБТС");
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваИПП");
	ОписаниеПрофиля.Роли.Добавить("ПросмотрОписанияИзмененийПрограммы");
	ОписаниеПрофиля.Роли.Добавить("РедактированиеПечатныхФорм");
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваПользователяБСП");
	ОписаниеПрофиля.Роли.Добавить("РаботаСФайлами");
	ОписаниеПрофиля.Роли.Добавить("МоиНастройки");
	
	// Использование НСИ.
	ОписаниеПрофиля.Роли.Добавить("ЧтениеГрафиковРаботы");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеКурсовВалют");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеНСИ");
	
	// Типовые возможности.
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеЛичныхВариантовОтчетов");
	ОписаниеПрофиля.Роли.Добавить("ПросмотрСвязанныеДокументы");
	ОписаниеПрофиля.Роли.Добавить("ИзменениеДополнительныхСведений");
	ОписаниеПрофиля.Роли.Добавить("ИспользованиеОбработкиТекущиеДела");
	
	// Основные возможности профиля.
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеСкладскихДокументов");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеПеремещенийТоваров");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеДокументовПокупателей");
	
	// Использование подсистемы контроля ведения учета.
	ОписаниеПрофиля.Роли.Добавить("ЧтениеРезультатовПроверкиУчета");
	
	// Виды ограничения доступа профиля.
	ОписаниеПрофиля.ВидыДоступа.Добавить("МестаХранения", "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ГруппыПартнеров", "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("Организации", "ВначалеВсеЗапрещены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("Пользователи", "Предустановленный");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ГруппыНоменклатуры", "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ДополнительныеСведения", "ВначалеВсеЗапрещены");
	
	ОписанияПрофилей.Добавить(ОписаниеПрофиля);
	
КонецПроцедуры

Процедура ЗаполнитьПрофильРуководитель(Знач ОписанияПрофилей)
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "Руководитель";
	ОписаниеПрофиля.Идентификатор = "75fa0ecb-98aa-11df-b54f-e0cb4ed5f655";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Руководитель'", Метаданные.ОсновнойЯзык.КодЯзыка);
	ОписаниеПрофиля.Описание =
		НСтр("ru = 'Предназначен для создания групп доступа, демонстрирующих
		           |использование предустановленных видов доступа. Например, в отличие от профиля ""Бухгалтер""
		           |руководителю разрешено редактировать документы ""Расходный кассовый ордер"" с типом 
		           |хозяйственной операции - ""Выдача зарплаты"", а персональные данные физических лиц - только просматривать.'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	
	// Использование 1С:Предприятия.
	ОписаниеПрофиля.Роли.Добавить("ЗапускВебКлиента");
	ОписаниеПрофиля.Роли.Добавить("ЗапускТолстогоКлиента");
	ОписаниеПрофиля.Роли.Добавить("ЗапускТонкогоКлиента");
	ОписаниеПрофиля.Роли.Добавить("ВыводНаПринтерФайлБуферОбмена");
	ОписаниеПрофиля.Роли.Добавить("СохранениеДанныхПользователя");
	ОписаниеПрофиля.Роли.Добавить("ПросмотрЖурналаРегистрации");
	
	// Использование программы.
	ДобавитьРолиНаВсеРазделыКомандногоИнтерфейса(ОписаниеПрофиля);
	ОписаниеПрофиля.Роли.Добавить("ПодсистемаАнкетирование");
	ОписаниеПрофиля.Роли.Добавить("БазовыеПрава");
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваБТС");
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваИПП");
	ОписаниеПрофиля.Роли.Добавить("ПросмотрОписанияИзмененийПрограммы");
	ОписаниеПрофиля.Роли.Добавить("РедактированиеПечатныхФорм");
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваПользователяБСП");
	ОписаниеПрофиля.Роли.Добавить("РаботаСФайлами");
	ОписаниеПрофиля.Роли.Добавить("МоиНастройки");
	
	// Использование НСИ.
	ОписаниеПрофиля.Роли.Добавить("ЧтениеГрафиковРаботы");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеКурсовВалют");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеНСИ");
	
	// Типовые возможности.
	ОписаниеПрофиля.Роли.Добавить("ПросмотрСвязанныеДокументы");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеЭлектронныхПодписейИШифрование");
	ОписаниеПрофиля.Роли.Добавить("ИзменениеДополнительныхСведений");
	ОписаниеПрофиля.Роли.Добавить("ИспользованиеОбработкиТекущиеДела");
	
	// Административные возможности.
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеВариантовОтчетов");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеДополнительныхОтчетовИОбработок");
	ОписаниеПрофиля.Роли.Добавить("РедактированиеРеквизитовОбъектов");
	ОписаниеПрофиля.Роли.Добавить("ИспользованиеУниверсальногоОтчета");
	
	// Основные возможности профиля.
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеБанковскихДокументов");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеКассовыхДокументов");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеЗарплаты");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеДанныхРеспондентов");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеЗаданийСРолевойАдресацией");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеДокументовПокупателей");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеИсполнителейРолейПоОбъектамАдресации");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеПроектов");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеРассылокОтчетов");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеРолейИсполнителей");
	ОписаниеПрофиля.Роли.Добавить("ИзменениеМакетовПечатныхФорм");
	ОписаниеПрофиля.Роли.Добавить("НастройкаИОценкаПроизводительности");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеЗаданий");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеЗадач");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеВнешнихПользователей");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеОтветовНаВопросыАнкет");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеВерсийОбъектов");
	ОписаниеПрофиля.Роли.Добавить("ОтправкаSMS");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеУчетныхЗаписейЭлектроннойПочты");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеВзаимодействий");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеШаблоновСообщений");
	ОписаниеПрофиля.Роли.Добавить("ИспользованиеЭлектроннойПодписиВМоделиСервиса");
	
	// Виды ограничения доступа профиля.
	ОписаниеПрофиля.ВидыДоступа.Добавить("ХозяйственныеОперации", "Предустановленный");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ГруппыПартнеров", "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("Пользователи", "Предустановленный");
	ОписаниеПрофиля.ЗначенияДоступа.Добавить("ХозяйственныеОперации",
		"Перечисление.ХозяйственныеОперации.ВыдачаЗарплаты");
	
	// Использование подсистемы контроля ведения учета.
	ОписаниеПрофиля.Роли.Добавить("ЧтениеРезультатовПроверкиУчета");
	
	ОписанияПрофилей.Добавить(ОписаниеПрофиля);
	
КонецПроцедуры

Процедура ЗаполнитьПрофильБухгалтер(Знач ОписанияПрофилей)
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "Бухгалтер";
	ОписаниеПрофиля.Идентификатор = "75fa0eca-98aa-11df-b54f-e0cb4ed5f655";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Бухгалтер'", Метаданные.ОсновнойЯзык.КодЯзыка);
	ОписаниеПрофиля.Описание =
		НСтр("ru = 'Демонстрирует использование
		           |- предустановленных видов доступа. Например, в отличие от профиля ""Руководитель""
		           |бухгалтерам разрешено редактировать документы ""Расходный кассовый ордер"" с типом
		           |хозяйственной операции - ""Выдача денежных средств подотчет"".
		           |- изменение как правило недоступных свойств объекта (на примере персональных данных физического лица).'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	
	// Использование 1С:Предприятия.
	ОписаниеПрофиля.Роли.Добавить("ЗапускВебКлиента");
	ОписаниеПрофиля.Роли.Добавить("ЗапускТолстогоКлиента");
	ОписаниеПрофиля.Роли.Добавить("ЗапускТонкогоКлиента");
	ОписаниеПрофиля.Роли.Добавить("ВыводНаПринтерФайлБуферОбмена");
	ОписаниеПрофиля.Роли.Добавить("СохранениеДанныхПользователя");
	
	// Использование программы.
	ДобавитьРолиНаВсеРазделыКомандногоИнтерфейса(ОписаниеПрофиля);
	ОписаниеПрофиля.Роли.Добавить("БазовыеПрава");
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваБТС");
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваИПП");
	ОписаниеПрофиля.Роли.Добавить("ПросмотрОписанияИзмененийПрограммы");
	ОписаниеПрофиля.Роли.Добавить("РедактированиеПечатныхФорм");
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваПользователяБСП");
	ОписаниеПрофиля.Роли.Добавить("РаботаСФайлами");
	ОписаниеПрофиля.Роли.Добавить("МоиНастройки");
	
	// Использование НСИ.
	ОписаниеПрофиля.Роли.Добавить("ЧтениеГрафиковРаботы");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеКурсовВалют");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеНСИ");
	
	// Типовые возможности.
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеЛичныхВариантовОтчетов");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеДополнительныхОтчетовИОбработок");
	ОписаниеПрофиля.Роли.Добавить("ПросмотрСвязанныеДокументы");
	ОписаниеПрофиля.Роли.Добавить("ИспользованиеОбработкиТекущиеДела");
	
	// Основные возможности профиля.
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеБанковскихДокументов");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеКассовыхДокументов");
	
	// Виды ограничения доступа профиля.
	ОписаниеПрофиля.ВидыДоступа.Добавить("МестаХранения",         "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("Организации",                "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("Кассы",                 "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ГруппыПартнеров",       "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("Пользователи",               "Предустановленный");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ХозяйственныеОперации", "Предустановленный");
	ОписаниеПрофиля.ЗначенияДоступа.Добавить("ХозяйственныеОперации",
		"Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику");
	ОписаниеПрофиля.ЗначенияДоступа.Добавить("ХозяйственныеОперации",
		"Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПодотчетника");
	
	ОписанияПрофилей.Добавить(ОписаниеПрофиля);
	
КонецПроцедуры

Процедура ЗаполнитьПрофильРасчетчикЗарплаты(Знач ОписанияПрофилей)
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "РасчетчикЗарплаты";
	ОписаниеПрофиля.Идентификатор = "11851213-0f5f-11e0-96c1-e0cb4ed5f655";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Расчетчик зарплаты'",
		Метаданные.ОсновнойЯзык.КодЯзыка);
	
	// Использование 1С:Предприятия.
	ОписаниеПрофиля.Роли.Добавить("ЗапускВебКлиента");
	ОписаниеПрофиля.Роли.Добавить("ЗапускТолстогоКлиента");
	ОписаниеПрофиля.Роли.Добавить("ЗапускТонкогоКлиента");
	ОписаниеПрофиля.Роли.Добавить("ВыводНаПринтерФайлБуферОбмена");
	ОписаниеПрофиля.Роли.Добавить("СохранениеДанныхПользователя");
	
	// Использование программы.
	ДобавитьРолиНаВсеРазделыКомандногоИнтерфейса(ОписаниеПрофиля);
	ОписаниеПрофиля.Роли.Добавить("БазовыеПрава");
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваБТС");
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваИПП");
	ОписаниеПрофиля.Роли.Добавить("ПросмотрОписанияИзмененийПрограммы");
	ОписаниеПрофиля.Роли.Добавить("РедактированиеПечатныхФорм");
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваПользователяБСП");
	ОписаниеПрофиля.Роли.Добавить("РаботаСФайлами");
	ОписаниеПрофиля.Роли.Добавить("МоиНастройки");
	
	// Использование НСИ.
	ОписаниеПрофиля.Роли.Добавить("ЧтениеГрафиковРаботы");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеКурсовВалют");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеНСИ");
	
	// Типовые возможности.
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеЛичныхВариантовОтчетов");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеДополнительныхОтчетовИОбработок");
	ОписаниеПрофиля.Роли.Добавить("ИзменениеДополнительныхСведений");
	ОписаниеПрофиля.Роли.Добавить("ИспользованиеОбработкиТекущиеДела");
	
	// Основные возможности профиля.
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеЗарплаты");
	
	// Виды ограничения доступа профиля.
	ОписаниеПрофиля.ВидыДоступа.Добавить("МестаХранения", "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ГруппыПартнеров", "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ФизическиеЛица", "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ГруппыНоменклатуры", "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("Организации");
	ОписаниеПрофиля.ВидыДоступа.Добавить("Пользователи", "Предустановленный");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ДополнительныеСведения", "ВначалеВсеЗапрещены");
	
	ОписанияПрофилей.Добавить(ОписаниеПрофиля);
	
КонецПроцедуры

Процедура ЗаполнитьПрофильАудитор(Знач ОписанияПрофилей)
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "Аудитор";
	ОписаниеПрофиля.Идентификатор = "bfd56f51-313d-11e5-b1ac-e0cb4ed5f655";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Аудитор'", Метаданные.ОсновнойЯзык.КодЯзыка);
	ОписаниеПрофиля.Описание      = НСтр("ru = 'Позволяет просматривать любые данные.'",
		Метаданные.ОсновнойЯзык.КодЯзыка);
	
	// Использование 1С:Предприятия.
	ОписаниеПрофиля.Роли.Добавить("ЗапускВебКлиента");
	ОписаниеПрофиля.Роли.Добавить("ЗапускТолстогоКлиента");
	ОписаниеПрофиля.Роли.Добавить("ЗапускТонкогоКлиента");
	ОписаниеПрофиля.Роли.Добавить("ВыводНаПринтерФайлБуферОбмена");
	ОписаниеПрофиля.Роли.Добавить("СохранениеДанныхПользователя");
	
	// Использование программы.
	ДобавитьРолиНаВсеРазделыКомандногоИнтерфейса(ОписаниеПрофиля);
	ОписаниеПрофиля.Роли.Добавить("ПодсистемаАнкетирование");
	ОписаниеПрофиля.Роли.Добавить("БазовыеПрава");
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваБТС");
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваИПП");
	ОписаниеПрофиля.Роли.Добавить("ПросмотрОписанияИзмененийПрограммы");
	ОписаниеПрофиля.Роли.Добавить("РедактированиеПечатныхФорм");
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваПользователяБСП");
	ОписаниеПрофиля.Роли.Добавить("РаботаСФайлами");
	ОписаниеПрофиля.Роли.Добавить("МоиНастройки");
	
	// Использование НСИ.
	ОписаниеПрофиля.Роли.Добавить("ЧтениеГрафиковРаботы");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеКурсовВалют");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеНСИ");
	
	// Типовые возможности.
	ОписаниеПрофиля.Роли.Добавить("ЧтениеВариантовОтчетов");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеДополнительныхОтчетовИОбработок");
	ОписаниеПрофиля.Роли.Добавить("ПросмотрСвязанныеДокументы");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеЭлектронныхПодписейИШифрование");
	ОписаниеПрофиля.Роли.Добавить("ИспользованиеОбработкиТекущиеДела");
	
	// Основные возможности профиля.
	ОписаниеПрофиля.Роли.Добавить("РаботаСФайлами");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеБанковскихДокументов");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеДанныхРеспондентов");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеДокументовПокупателей");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеЗаданийСРолевойАдресацией");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеЗарплаты");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеКассовыхДокументов");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеПроектов");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеПеремещенийТоваров");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеСкладскихДокументов");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеВерсийОбъектов");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеВнешнихПользователей");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеГрафиковРаботы");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеДополнительныхСведений");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеЗаданий");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеЗадач");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеИнформацииОВерсияхОбъектов");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеКурсовВалют");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеОтветовНаВопросыАнкет");
	
	// Использование онлайн-поддержки
	ОписаниеПрофиля.Роли.Добавить("ВызовОнлайнПоддержки");
	ОписаниеПрофиля.Роли.Добавить("ВызовОнлайнПоддержки");
	ОписанияПрофилей.Добавить(ОписаниеПрофиля);
	
КонецПроцедуры

Процедура ЗаполнитьПрофильПартнер(Знач ОписанияПрофилей)
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "Партнер";
	ОписаниеПрофиля.Идентификатор = "67b8f689-ee30-11de-a1c1-005056c00008";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Партнер'", Метаданные.ОсновнойЯзык.КодЯзыка);
	
	// Переопределение назначения.
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ОписаниеПрофиля.Назначение,
		Метаданные.ОпределяемыеТипы.ВнешнийПользователь.Тип.Типы());
	
	ОписаниеПрофиля.Описание =
		НСтр("ru = 'Предназначен для партнеров (внешних пользователей), работающих с программой.'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	
	// Использование 1С:Предприятия.
	ОписаниеПрофиля.Роли.Добавить("ЗапускВебКлиента");
	ОписаниеПрофиля.Роли.Добавить("ЗапускТонкогоКлиента");
	ОписаниеПрофиля.Роли.Добавить("ВыводНаПринтерФайлБуферОбмена");
	
	// Использование программы.
	ОписаниеПрофиля.Роли.Добавить("БазовыеПраваВнешнегоПользователя");
	ОписаниеПрофиля.Роли.Добавить("ОплатаСчетовВнешнимиПользователями");
	ОписаниеПрофиля.Роли.Добавить("ИспользованиеОбработкиТекущиеДела");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеДополнительныхОтчетовИОбработок");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеЛичныхВариантовОтчетов");
	
	// Использование НСИ.
	ОписаниеПрофиля.Роли.Добавить("ЧтениеГрафиковРаботы");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеКурсовВалют");
	
	// Основные возможности профиля.
	ОписаниеПрофиля.Роли.Добавить("ЧтениеДанныхДляОтветовНаВопросыАнкет");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеДанныхОбъектовАвторизации");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеОтветовНаВопросыАнкет");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеОтветовНаВопросыАнкет");
	
	// Виды ограничения доступа профиля.
	ОписаниеПрофиля.ВидыДоступа.Добавить("ВнешниеПользователи", "Предустановленный");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ГруппыПартнеров", "Предустановленный");
	ОписаниеПрофиля.ВидыДоступа.Добавить("Организации");
	ОписаниеПрофиля.ВидыДоступа.Добавить("ДополнительныеОтчетыИОбработки");
	
	ОписанияПрофилей.Добавить(ОписаниеПрофиля);
	
КонецПроцедуры

// Дополнительные профили.

Процедура ЗаполнитьПрофильОтветственныйЗаНормативноСправочнуюИнформацию(Знач ОписанияПрофилей)
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "ОтветственныйЗаНСИ";
	ОписаниеПрофиля.Идентификатор = "09e56dbf-90a0-11de-862c-001d600d9fe2";
	ОписаниеПрофиля.Наименование  =
		НСтр("ru = 'Ответственный за нормативно-справочную информацию (дополнительно)'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	ОписаниеПрофиля.Описание =
		НСтр("ru = 'Ведение и обновление классификаторов, различной нормативно-справочной информации.'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	
	// Основные возможности профиля.
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеДополнительныхРеквизитовИСведений");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеКурсовВалют");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеГрафиковРаботы");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеАдресныхСведений");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеБанков");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеКалендарныхГрафиков");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеВидовКонтактнойИнформации");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеНСИ");
	
	// Виды ограничения доступа профиля.
	ОписаниеПрофиля.ВидыДоступа.Добавить("ГруппыПартнеров");
	
	ОписанияПрофилей.Добавить(ОписаниеПрофиля);
	
КонецПроцедуры

Процедура ЗаполнитьПрофильОтветственныйЗаВедениеНоменклатуры(Знач ОписанияПрофилей)
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "ОтветственныйЗаВедениеНоменклатуры";
	ОписаниеПрофиля.Идентификатор = "d348b8f5-1437-11e2-bb53-005056c00008";
	ОписаниеПрофиля.Наименование  =
		НСтр("ru = 'Ответственный за ведение номенклатуры (дополнительно)'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	ОписаниеПрофиля.Описание =
		НСтр("ru = 'Назначается тем пользователям, которые будут добавлять или изменять номенклатуру.'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	
	// Основные возможности профиля.
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеНоменклатуры");
	// Работа с НСИ только в части стран мира.
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеВидовКонтактнойИнформации");
	
	// Виды ограничения доступа профиля.
	ОписаниеПрофиля.ВидыДоступа.Добавить("ГруппыНоменклатуры", "ВначалеВсеРазрешены");
	
	ОписанияПрофилей.Добавить(ОписаниеПрофиля);
	
КонецПроцедуры

Процедура ЗаполнитьПрофильОтветственныйЗаВедениеВзаимодействий(Знач ОписанияПрофилей)
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "ОтветственныйЗаВедениеВзаимодействий";
	ОписаниеПрофиля.Идентификатор = "62e89fcd-9a4c-11df-8c0e-0011d8570cdf";
	ОписаниеПрофиля.Наименование  =
		НСтр("ru = 'Ответственный за ведение взаимодействий (дополнительно)'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	ОписаниеПрофиля.Описание =
		НСтр("ru = 'Ведение взаимодействий с клиентами, поставщиками, партнерами и т.п. по электронной почте и телефону,
		           |а также планирование встреч (подсистема ""Взаимодействия"").'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	
	// Основные возможности профиля.
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеУчетныхЗаписейЭлектроннойПочты");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеВзаимодействий");
	
	// Виды ограничения доступа профиля.
	ОписаниеПрофиля.ВидыДоступа.Добавить("ГруппыПартнеров", "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("Пользователи", "ВначалеВсеРазрешены");
	ОписаниеПрофиля.ВидыДоступа.Добавить("УчетныеЗаписиЭлектроннойПочты");
	
	ОписанияПрофилей.Добавить(ОписаниеПрофиля);
	
КонецПроцедуры

Процедура ЗаполнитьПрофильОтветственныйЗаСписокПользователей(Знач ОписанияПрофилей)
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "ОтветственныйЗаСписокПользователей";
	ОписаниеПрофиля.Идентификатор = "71ab566d-313b-11e5-b1ac-e0cb4ed5f655";
	ОписаниеПрофиля.Наименование  =
		НСтр("ru = 'Ответственный за список пользователей (дополнительно)'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	ОписаниеПрофиля.Описание =
		НСтр("ru = 'Дополнительно назначается тем пользователям, которым должна быть
		           |доступна возможность добавления и изменения пользователей,
		           |настройка свойств пользователей информационной базы (без разрешения входа)
		           |(подсистема ""Пользователи"").'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	
	// Основные возможности профиля.
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеПользователей");
	ОписаниеПрофиля.Роли.Добавить("ПодсистемаАдминистрирование");
	
	ОписанияПрофилей.Добавить(ОписаниеПрофиля);
	
КонецПроцедуры

Процедура ЗаполнитьПрофильОтветственныйЗаСписокВнешнихПользователей(Знач ОписанияПрофилей)
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "ОтветственныйЗаСписокВнешнихПользователей";
	ОписаниеПрофиля.Идентификатор = "14401b24-3591-11df-863c-001d600d9ad2";
	ОписаниеПрофиля.Наименование  =
		НСтр("ru = 'Ответственный за список внешних пользователей (дополнительно)'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	ОписаниеПрофиля.Описание =
		НСтр("ru = 'Дополнительно назначается тем пользователям, которым должна быть
		           |доступна возможность добавления и изменения внешних пользователей,
		           |настройка свойств пользователей информационной базы (без разрешения входа)
		           |(подсистема ""Пользователи"").'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	
	// Основные возможности профиля.
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеВнешнихПользователей");
	ОписаниеПрофиля.Роли.Добавить("ПодсистемаАдминистрирование");
	
	ОписанияПрофилей.Добавить(ОписаниеПрофиля);
	
КонецПроцедуры

Процедура ЗаполнитьПрофильОтветственныйЗаСоставыУчастниковГруппДоступа(Знач ОписанияПрофилей)
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "ОтветственныйЗаСоставыУчастниковГруппДоступа";
	ОписаниеПрофиля.Идентификатор = "588438ff-e954-11de-8634-001d600d9ad2";
	ОписаниеПрофиля.Наименование  =
		НСтр("ru = 'Ответственный за составы участников групп доступа (дополнительно)'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	ОписаниеПрофиля.Описание =
		НСтр("ru = 'Назначается тем пользователям, у которых должна быть
		           |возможность изменять состав участников своих групп доступа
		           |(подсистема ""Управление доступом"").'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	
	// Основные возможности профиля.
	ОписаниеПрофиля.Роли.Добавить("ИзменениеУчастниковГруппДоступа");
	ОписаниеПрофиля.Роли.Добавить("ПодсистемаАдминистрирование");
	
	ОписанияПрофилей.Добавить(ОписаниеПрофиля);
	
КонецПроцедуры

Процедура ЗаполнитьПрофильНастройкаСинхронизацииФайловСОблачнымСервисом(Знач ОписанияПрофилей)
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "НастройкаСинхронизацииФайловСОблачнымСервисом";
	ОписаниеПрофиля.Идентификатор = "3b9c663c-496d-11e5-9e02-50465da19b8f";
	ОписаниеПрофиля.Наименование  =
		НСтр("ru = 'Настройка синхронизации файлов с облачным сервисом (дополнительно)'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	ОписаниеПрофиля.Описание =
		НСтр("ru = 'Дополнительно назначается тем пользователям, которым должна быть
		           |доступна настройка синхронизации файлов с облачными сервисами.'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	
	// Основные возможности профиля.
	ОписаниеПрофиля.Роли.Добавить("НастройкаСинхронизацииФайлов");
	
	ОписанияПрофилей.Добавить(ОписаниеПрофиля);
	
КонецПроцедуры

Процедура ЗаполнитьПрофильОтветственныйЗаДатыЗапретаИзмененияДанных(Знач ОписанияПрофилей)
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "ОтветственныйЗаДатыЗапретаИзмененияДанных";
	ОписаниеПрофиля.Идентификатор = "170b789c-3065-11e5-b1ac-e0cb4ed5f655";
	ОписаниеПрофиля.Наименование  =
		НСтр("ru = 'Ответственный за даты запрета изменения данных (дополнительно)'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	ОписаниеПрофиля.Описание =
		НСтр("ru = 'Дополнительно назначается тем пользователям, которым должна быть
		           |доступна возможность работы с датами запрета изменения данных
		           |(подсистема ""Даты запрета изменения"").'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	
	// Основные возможности профиля.
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеДатЗапретаИзменения");
	
	ОписанияПрофилей.Добавить(ОписаниеПрофиля);
	
КонецПроцедуры

Процедура ЗаполнитьПрофильИспользованиеЭлектроннойПочты(Знач ОписанияПрофилей)
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "ИспользованиеЭлектроннойПочты";
	ОписаниеПрофиля.Идентификатор = "588438ff-e854-11de-8634-001d600d9ad1";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Использование электронной почты (дополнительно)'",
		Метаданные.ОсновнойЯзык.КодЯзыка);
	ОписаниеПрофиля.Описание =
		НСтр("ru = 'Дополнительно назначается тем пользователям, которым должны быть
		           |доступны различные функции получения и отправки электронной почты,
		           |имеющиеся в системе.'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	
	// Основные возможности профиля.
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеУчетныхЗаписейЭлектроннойПочты");
	ОписаниеПрофиля.Роли.Добавить("РаботаСПочтовымиСообщениями");
	
	// Виды ограничения доступа профиля.
	ОписаниеПрофиля.ВидыДоступа.Добавить("УчетныеЗаписиЭлектроннойПочты");
	ОписаниеПрофиля.ВидыДоступа.Добавить("Пользователи");
	
	ОписанияПрофилей.Добавить(ОписаниеПрофиля);
	
КонецПроцедуры

Процедура ЗаполнитьПрофильПечатьНепроведенныхДокументов(Знач ОписанияПрофилей)
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "ПечатьНепроведенныхДокументов";
	ОписаниеПрофиля.Идентификатор = "c944ca49-dfee-11de-8632-001d600d9ad2";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Печать непроведенных документов (дополнительно)'",
		Метаданные.ОсновнойЯзык.КодЯзыка);
	ОписаниеПрофиля.Описание =
		НСтр("ru = 'Дополнительно назначается тем пользователям, которым должна быть
		           |доступна печать непроведенных документов.
		           |Демонстрирует использование функции ЕстьРоль()
		           |с использованием параметра НаборыЗначенийДоступа.'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	
	// Основные возможности профиля.
	ОписаниеПрофиля.Роли.Добавить("ПечатьНепроведенныхДокументов");
	
	// Виды ограничения доступа профиля.
	ОписаниеПрофиля.ВидыДоступа.Добавить("МестаХранения");
	ОписаниеПрофиля.ВидыДоступа.Добавить("Организации");
	ОписанияПрофилей.Добавить(ОписаниеПрофиля);
	
КонецПроцедуры

Процедура ЗаполнитьПрофильРаботаСПапкамиФайлов(Знач ОписанияПрофилей)
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "РаботаСПапкамиФайлов";
	ОписаниеПрофиля.Идентификатор = "a8f63f6c-ced9-11de-862f-001d600d9ad2";
	ОписаниеПрофиля.Наименование  = НСтр("ru = 'Работа с папками файлов (дополнительно)'",
		Метаданные.ОсновнойЯзык.КодЯзыка);
	ОписаниеПрофиля.Описание =
		НСтр("ru = 'Дополнительно назначается тем пользователям, которым разрешено
		           |работать с папками файлов (подсистема ""Работа с файлами"").'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	
	// Основные возможности профиля.
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеПапокИФайлов");
	ОписанияПрофилей.Добавить(ОписаниеПрофиля);
	
КонецПроцедуры

Процедура ЗаполнитьПрофильРедактированиеСогласийНаОбработкуПерсональныхДанных(Знач ОписанияПрофилей)
 
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "РедактированиеСогласийНаОбработкуПерсональныхДанных";
	ОписаниеПрофиля.Идентификатор = "3d09f30d-0d95-403c-b2ab-c39780da6a95";
	ОписаниеПрофиля.Наименование  =
		НСтр("ru = 'Редактирование согласий на обработку персональных данных (дополнительно)'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	ОписаниеПрофиля.Описание =
		НСтр("ru = 'Добавление и изменение согласий на обработку персональных данных.'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	
	// Основные возможности профиля.
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеСогласийНаОбработкуПерсональныхДанных");
	
	// Виды ограничения доступа профиля.
	ОписаниеПрофиля.ВидыДоступа.Добавить("Организации");
	
	ОписанияПрофилей.Добавить(ОписаниеПрофиля);
	
КонецПроцедуры

Процедура ЗаполнитьПрофильПросмотрСогласийНаОбработкуПерсональныхДанных(Знач ОписанияПрофилей)
	
	ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
	ОписаниеПрофиля.Имя           = "ПросмотрСогласийНаОбработкуПерсональныхДанных";
	ОписаниеПрофиля.Идентификатор = "53c4eecf-9401-450b-9c15-15872be591e5";
	ОписаниеПрофиля.Наименование  =
		НСтр("ru = 'Просмотр согласий на обработку персональных данных (дополнительно)'",
			Метаданные.ОсновнойЯзык.КодЯзыка);
	ОписаниеПрофиля.Описание = НСтр("ru = 'Просмотр согласий на обработку персональных данных.'",
		Метаданные.ОсновнойЯзык.КодЯзыка);
	
	// Основные возможности профиля.
	ОписаниеПрофиля.Роли.Добавить("ЧтениеСогласийНаОбработкуПерсональныхДанных");
	
	// Виды ограничения доступа профиля.
	ОписаниеПрофиля.ВидыДоступа.Добавить("Организации");
	
	ОписанияПрофилей.Добавить(ОписаниеПрофиля);
	
КонецПроцедуры

// Для процедур ЗаполнитьПрофиль*.
Процедура ДобавитьРолиНаВсеРазделыКомандногоИнтерфейса(Знач ОписаниеПрофиля)
	
	ОписаниеПрофиля.Роли.Добавить("ПодсистемаБизнесПроцессыИЗадачи");
	ОписаниеПрофиля.Роли.Добавить("ПодсистемаИнтегрируемыеПодсистемы");
	ОписаниеПрофиля.Роли.Добавить("ПодсистемаИнтегрируемыеПодсистемыПродолжение");
	ОписаниеПрофиля.Роли.Добавить("ПодсистемаНормативноСправочнаяИнформация");
	ОписаниеПрофиля.Роли.Добавить("ПодсистемаОрганайзер");
	ОписаниеПрофиля.Роли.Добавить("ПодсистемаСервисныеПодсистемы");
	ОписаниеПрофиля.Роли.Добавить("ПодсистемаСинхронизацияДанных");
	ОписаниеПрофиля.Роли.Добавить("ПодсистемаУправлениеДоступом");
	
КонецПроцедуры

// Заполнение значений наборов доступа.

Процедура ПриЗаполненииНаборовЗначенийДоступаДляВстречи(Объект, Таблица)

	// Логика ограничения следующая: объект доступен если доступен  "Автор" или "Ответственный".
	// Логика "ИЛИ" реализуется через различные номера наборов.

	// Ограничение по "УчетныеЗаписиЭлектроннойПочты".
	НомерНабора = 1;

	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.НомерНабора     = НомерНабора;
	СтрокаТаб.ЗначениеДоступа = Объект.Автор;

	// Ограничение по "Ответственный".
	НомерНабора = НомерНабора + 1;

	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.НомерНабора     = НомерНабора;
	СтрокаТаб.ЗначениеДоступа = Объект.Ответственный;

	МассивКонтактныхЛиц = Новый Массив;
	Для Каждого СтрокаТаблицы Из Объект.Участники Цикл

		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Контакт) Тогда
			Продолжить;
		КонецЕсли;

		Если ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.Партнеры") Тогда

			НомерНабора = НомерНабора + 1;

			СтрокаТаб = Таблица.Добавить();
			СтрокаТаб.НомерНабора     = НомерНабора;
			СтрокаТаб.ЗначениеДоступа = СтрокаТаблицы.Контакт;

		ИначеЕсли ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда

			МассивКонтактныхЛиц.Добавить(СтрокаТаблицы.Контакт);

		КонецЕсли;

	КонецЦикла;

	Если МассивКонтактныхЛиц.Количество() > 0 Тогда

		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КонтактныеЛицаПартнеров.Владелец КАК Партнер
		|ИЗ
		|	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
		|ГДЕ
		|	КонтактныеЛицаПартнеров.Ссылка В(&МассивКонтактныхЛиц)
		|");
		Запрос.УстановитьПараметр("МассивКонтактныхЛиц", МассивКонтактныхЛиц);
		Выборка = Запрос.Выполнить().Выбрать();

		Пока Выборка.Следующий() Цикл

			НомерНабора = НомерНабора + 1;

			СтрокаТаб = Таблица.Добавить();
			СтрокаТаб.НомерНабора     = НомерНабора;
			СтрокаТаб.ЗначениеДоступа = Выборка.Партнер;

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

Процедура ПриЗаполненииНаборовЗначенийДоступаДляЗапланированногоВзаимодействия(Объект, Таблица)

	// Логика ограничения следующая: объект доступен если доступен  "Автор" или "Ответственный".
	// Логика "ИЛИ" реализуется через различные номера наборов.

	// Ограничение по "УчетныеЗаписиЭлектроннойПочты".
	НомерНабора = 1;

	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.НомерНабора     = НомерНабора;
	СтрокаТаб.ЗначениеДоступа = Объект.Автор;

	// Ограничение по "Ответственный".
	НомерНабора = НомерНабора + 1;

	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.НомерНабора     = НомерНабора;
	СтрокаТаб.ЗначениеДоступа = Объект.Ответственный;

	МассивКонтактныхЛиц = Новый Массив;
	Для Каждого СтрокаТаблицы Из Объект.Участники Цикл

		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Контакт) Тогда
			Продолжить;
		КонецЕсли;

		Если ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.Партнеры") Тогда

			НомерНабора = НомерНабора + 1;

			СтрокаТаб = Таблица.Добавить();
			СтрокаТаб.НомерНабора     = НомерНабора;
			СтрокаТаб.ЗначениеДоступа = СтрокаТаблицы.Контакт;

		ИначеЕсли ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда

			МассивКонтактныхЛиц.Добавить(СтрокаТаблицы.Контакт);

		КонецЕсли;

	КонецЦикла;

	Если МассивКонтактныхЛиц.Количество() > 0 Тогда

		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КонтактныеЛицаПартнеров.Владелец КАК Партнер
		|ИЗ
		|	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
		|ГДЕ
		|	КонтактныеЛицаПартнеров.Ссылка В(&МассивКонтактныхЛиц)
		|");
		Запрос.УстановитьПараметр("МассивКонтактныхЛиц", МассивКонтактныхЛиц);
		Выборка = Запрос.Выполнить().Выбрать();

		Пока Выборка.Следующий() Цикл

			НомерНабора = НомерНабора + 1;

			СтрокаТаб = Таблица.Добавить();
			СтрокаТаб.НомерНабора     = НомерНабора;
			СтрокаТаб.ЗначениеДоступа = Выборка.Партнер;

		КонецЦикла;

	КонецЕсли;	

КонецПроцедуры

Процедура ПриЗаполненииНаборовЗначенийДоступаДляСообщенияSMS(Объект, Таблица)

	// Логика ограничения следующая: объект доступен если доступен  "Автор" или "Ответственный".
	// Логика "ИЛИ" реализуется через различные номера наборов.

	// Ограничение по "УчетныеЗаписиЭлектроннойПочты".
	НомерНабора = 1;

	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.НомерНабора     = НомерНабора;
	СтрокаТаб.ЗначениеДоступа = Объект.Автор;

	// Ограничение по "Ответственный".
	НомерНабора = НомерНабора + 1;

	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.НомерНабора     = НомерНабора;
	СтрокаТаб.ЗначениеДоступа = Объект.Ответственный;

	МассивКонтактныхЛиц = Новый Массив;
	Для Каждого СтрокаТаблицы Из Объект.Адресаты Цикл

		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Контакт) Тогда
			Продолжить;
		КонецЕсли;

		Если ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.Партнеры") Тогда

			НомерНабора = НомерНабора + 1;

			СтрокаТаб = Таблица.Добавить();
			СтрокаТаб.НомерНабора     = НомерНабора;
			СтрокаТаб.ЗначениеДоступа = СтрокаТаблицы.Контакт;

		ИначеЕсли ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда

			МассивКонтактныхЛиц.Добавить(СтрокаТаблицы.Контакт);

		КонецЕсли;

	КонецЦикла;

	Если МассивКонтактныхЛиц.Количество() > 0 Тогда

		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КонтактныеЛицаПартнеров.Владелец КАК Партнер
		|ИЗ
		|	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
		|ГДЕ
		|	КонтактныеЛицаПартнеров.Ссылка В(&МассивКонтактныхЛиц)
		|");
		Запрос.УстановитьПараметр("МассивКонтактныхЛиц", МассивКонтактныхЛиц);
		Выборка = Запрос.Выполнить().Выбрать();

		Пока Выборка.Следующий() Цикл

			НомерНабора = НомерНабора + 1;

			СтрокаТаб = Таблица.Добавить();
			СтрокаТаб.НомерНабора     = НомерНабора;
			СтрокаТаб.ЗначениеДоступа = Выборка.Партнер;

		КонецЦикла;

	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаполненииНаборовЗначенийДоступаДляТелефонногоЗвонка(Объект, Таблица)

	// Логика ограничения следующая: объект доступен если доступен  "Автор" или "Ответственный".
	// Логика "ИЛИ" реализуется через различные номера наборов.
	
	// Ограничение по "Автор".
	НомерНабора = 1;

	СтрокаТаблицы = Таблица.Добавить();
	СтрокаТаблицы.НомерНабора     = НомерНабора;
	СтрокаТаблицы.ЗначениеДоступа = Объект.Автор;

	// Ограничение по "Ответственный".
	НомерНабора = НомерНабора + 1;

	СтрокаТаблицы = Таблица.Добавить();
	СтрокаТаблицы.НомерНабора     = НомерНабора;
	СтрокаТаблицы.ЗначениеДоступа = Объект.Ответственный;

	Если ЗначениеЗаполнено(Объект.АбонентКонтакт) Тогда

		Если ТипЗнч(Объект.АбонентКонтакт) = Тип("СправочникСсылка.Партнеры") Тогда

			НомерНабора = НомерНабора + 1;

			СтрокаТаблицы = Таблица.Добавить();
			СтрокаТаблицы.НомерНабора     = НомерНабора;
			СтрокаТаблицы.ЗначениеДоступа = Объект.АбонентКонтакт;

		ИначеЕсли ТипЗнч(Объект.АбонентКонтакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда

			Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	КонтактныеЛицаПартнеров.Владелец КАК Партнер
			|ИЗ
			|	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
			|ГДЕ
			|	КонтактныеЛицаПартнеров.Ссылка =&АбонентКонтакт
			|");
			Запрос.УстановитьПараметр("АбонентКонтакт", Объект.АбонентКонтакт);
			Выборка = Запрос.Выполнить().Выбрать();

			Пока Выборка.Следующий() Цикл

				НомерНабора = НомерНабора + 1;

				СтрокаТаблицы = Таблица.Добавить();
				СтрокаТаблицы.НомерНабора     = НомерНабора;
				СтрокаТаблицы.ЗначениеДоступа = Выборка.Партнер;

			КонецЦикла;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ПриЗаполненииНаборовЗначенийДоступаДляЭлектронногоПисьмаВходящего(Объект, Таблица)

	// Логика ограничения следующая: объект доступен если доступен  "Ответственный" или "Учетная запись".
	// Логика "ИЛИ" реализуется через различные номера наборов.

	// Ограничение по "УчетныеЗаписиЭлектроннойПочты".
	НомерНабора = 1;

	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.НомерНабора     = НомерНабора;
	СтрокаТаб.ЗначениеДоступа = Объект.УчетнаяЗапись;

	// Ограничение по "Ответственный".
	НомерНабора = НомерНабора + 1;

	СтрокаТаб = Таблица.Добавить();
	СтрокаТаб.НомерНабора     = НомерНабора;
	СтрокаТаб.ЗначениеДоступа = Объект.Ответственный;

	МассивКонтактныхЛиц = Новый Массив;

	МассивТабличныхЧастей = Новый Массив;
	МассивТабличныхЧастей.Добавить("ПолучателиПисьма");
	МассивТабличныхЧастей.Добавить("ПолучателиКопий");
	МассивТабличныхЧастей.Добавить("ПолучателиОтвета");
	Для Каждого ТабличнаяЧасть Из МассивТабличныхЧастей Цикл

		Для Каждого СтрокаТаблицы Из Объект[ТабличнаяЧасть] Цикл

			Если Не ЗначениеЗаполнено(СтрокаТаблицы.Контакт) Тогда
				Продолжить;
			КонецЕсли;

			Если ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.Партнеры") Тогда

				НомерНабора = НомерНабора + 1;

				СтрокаТаб = Таблица.Добавить();
				СтрокаТаб.НомерНабора     = НомерНабора;
				СтрокаТаб.ЗначениеДоступа = СтрокаТаблицы.Контакт;

			ИначеЕсли ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда

				МассивКонтактныхЛиц.Добавить(СтрокаТаблицы.Контакт);

			КонецЕсли;

		КонецЦикла;
	КонецЦикла;

	Если МассивКонтактныхЛиц.Количество() > 0 Тогда

		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КонтактныеЛицаПартнеров.Владелец КАК Партнер
		|ИЗ
		|	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
		|ГДЕ
		|	КонтактныеЛицаПартнеров.Ссылка В(&МассивКонтактныхЛиц)
		|");
		Запрос.УстановитьПараметр("МассивКонтактныхЛиц", МассивКонтактныхЛиц);
		Выборка = Запрос.Выполнить().Выбрать();

		Пока Выборка.Следующий() Цикл

			НомерНабора = НомерНабора + 1;

			СтрокаТаб = Таблица.Добавить();
			СтрокаТаб.НомерНабора     = НомерНабора;
			СтрокаТаб.ЗначениеДоступа = Выборка.Партнер;

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

Процедура ПриЗаполненииНаборовЗначенийДоступаДляЭлектронногоПисьмаИсходящего(Объект, Таблица)

	// Логика ограничения следующая: объект доступен если доступен  "Ответственный" или "Учетная запись"
	// или "Автор".
	// Логика "ИЛИ" реализуется через различные номера наборов.

	НомерНабора = 1;

	СтрокаТаблицы = Таблица.Добавить();
	СтрокаТаблицы.НомерНабора     = НомерНабора;
	СтрокаТаблицы.ЗначениеДоступа = Объект.УчетнаяЗапись;

	НомерНабора = НомерНабора + 1;

	СтрокаТаблицы = Таблица.Добавить();
	СтрокаТаблицы.НомерНабора     = НомерНабора;
	СтрокаТаблицы.ЗначениеДоступа = Объект.Автор;

	НомерНабора = НомерНабора + 1;

	СтрокаТаблицы = Таблица.Добавить();
	СтрокаТаблицы.НомерНабора     = НомерНабора;
	СтрокаТаблицы.ЗначениеДоступа = Объект.Ответственный;

	МассивКонтактныхЛиц = Новый Массив;

	МассивТабличныхЧастей = Новый Массив;
	МассивТабличныхЧастей.Добавить("ПолучателиПисьма");
	МассивТабличныхЧастей.Добавить("ПолучателиКопий");
	МассивТабличныхЧастей.Добавить("ПолучателиОтвета");
	МассивТабличныхЧастей.Добавить("ПолучателиСкрытыхКопий");
	Для Каждого ТабличнаяЧасть Из МассивТабличныхЧастей Цикл

		Для Каждого СтрокаТаблицы Из Объект[ТабличнаяЧасть] Цикл

			Если Не ЗначениеЗаполнено(СтрокаТаблицы.Контакт) Тогда
				Продолжить;
			КонецЕсли;

			Если ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.Партнеры") Тогда

				НомерНабора = НомерНабора + 1;

				НоваяСтрока = Таблица.Добавить();
				НоваяСтрока.НомерНабора     = НомерНабора;
				НоваяСтрока.ЗначениеДоступа = СтрокаТаблицы.Контакт;

			ИначеЕсли ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда

				МассивКонтактныхЛиц.Добавить(СтрокаТаблицы.Контакт);

			КонецЕсли;

		КонецЦикла;
	КонецЦикла;

	Если МассивКонтактныхЛиц.Количество() > 0 Тогда

		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КонтактныеЛицаПартнеров.Владелец КАК Партнер
		|ИЗ
		|	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
		|ГДЕ
		|	КонтактныеЛицаПартнеров.Ссылка В(&МассивКонтактныхЛиц)
		|");
		Запрос.УстановитьПараметр("МассивКонтактныхЛиц", МассивКонтактныхЛиц);
		Выборка = Запрос.Выполнить().Выбрать();

		Пока Выборка.Следующий() Цикл

			НомерНабора = НомерНабора + 1;

			НоваяСтрока = Таблица.Добавить();
			НоваяСтрока.НомерНабора     = НомерНабора;
			НоваяСтрока.ЗначениеДоступа = Выборка.Партнер;

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

#КонецОбласти
