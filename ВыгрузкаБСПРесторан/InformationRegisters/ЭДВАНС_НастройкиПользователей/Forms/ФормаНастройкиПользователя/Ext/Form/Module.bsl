
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИдентификаторыНастроек = Новый Структура;
	
	Если Параметры.Свойство("Пользователь") Тогда
		Пользователь = Параметры.Пользователь;
		Если ЗначениеЗаполнено(Пользователь) Тогда
			//ОсновнаяОрганизация = ПланыВидовХарактеристик.НастройкиПользователей.ОсновнаяОрганизация;
			//ОсновноеПодразделениеОрганизации = ПланыВидовХарактеристик.НастройкиПользователей.ОсновноеПодразделениеОрганизации;
			//ОсновноеСтруктурноеПодразделениеОрганизации = ПланыВидовХарактеристик.НастройкиПользователей.ОсновноеСтруктурноеПодразделениеОрганизации;
			//
			//ЗначенияНастроекПользователя = ПользователиБКВызовСервераПовтИсп.ЗначенияНастроекПользователя(
			//	Пользователь, "ОсновнаяОрганизация,ОсновноеСтруктурноеПодразделениеОрганизации");
			//	
			//ЗначениеОсновнойОрганизации = ЗначенияНастроекПользователя.ОсновнаяОрганизация;
			//ЗначениеОсновногоСтруктурногоПодразделения = ЗначенияНастроекПользователя.ОсновноеСтруктурноеПодразделениеОрганизации;

			ЗаполнитьДерево();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДерево()

	НастройкиЭлементы = ДеревоНастроек.ПолучитьЭлементы();
	НастройкиЭлементы.Очистить();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.Текст=
	"ВЫБРАТЬ
	|	Настройки.Родитель,
	|	Настройки.Ссылка КАК Настройка,
	|	Настройки.ЭтоГруппа КАК ЭтоГруппа,
	|	Настройки.Предопределенный КАК Предопределенный,
	|	ВЫБОР
	|		КОГДА Настройки.ЭтоГруппа
	|				И НЕ Настройки.Предопределенный
	|			ТОГДА 0
	|		КОГДА Настройки.ЭтоГруппа
	|				И Настройки.Предопределенный
	|			ТОГДА 2
	|		КОГДА НЕ Настройки.ЭтоГруппа
	|				И НЕ Настройки.Предопределенный
	|			ТОГДА 3
	|		КОГДА НЕ Настройки.ЭтоГруппа
	|				И Настройки.Предопределенный
	|			ТОГДА 5
	|	КОНЕЦ КАК НомерКартинки,
	|	ЗначениеНастроек.Значение,
	|	Настройки.Идентификатор
	|ИЗ
	|	ПланВидовХарактеристик.ЭДВАНС_НастройкиПользователей КАК Настройки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭДВАНС_НастройкиПользователей КАК ЗначениеНастроек
	|		ПО (ЗначениеНастроек.Настройка = Настройки.Ссылка)
	|			И (ЗначениеНастроек.Пользователь = &Пользователь),
	|	Константы КАК Константы
	|ГДЕ
	|	НЕ Настройки.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭтоГруппа ИЕРАРХИЯ,
	|	Настройки.Наименование";
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	ДобавитьСтрокиВДерево(Выборка, НастройкиЭлементы);
	
КонецПроцедуры

&НаСервере
Функция ДобавитьСтрокиВДерево(Выборка, ДеревоЗначений)
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрокаНастройки = ДеревоЗначений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаНастройки, Выборка);
		НоваяСтрокаНастройки.Значение = Выборка.Настройка.ТипЗначения.ПривестиЗначение(Выборка.Значение);
		
		Если ЗначениеЗаполнено(НоваяСтрокаНастройки.Идентификатор) Тогда
			ИдентификаторыНастроек.Вставить(НоваяСтрокаНастройки.Идентификатор, НоваяСтрокаНастройки.ПолучитьИдентификатор());
		КонецЕсли;
		
		СтрокиВыборки = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		Если СтрокиВыборки.Количество() > 0 Тогда
			
			ДобавитьСтрокиВДерево(СтрокиВыборки, НоваяСтрокаНастройки.ПолучитьЭлементы());
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецФункции

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
		ОбновитьНастройкиИЗакрыть();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНастройкиИЗакрыть(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	// При немодифицированности работает "отмена"
	
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") И ДополнительныеПараметры.Свойство("Закрывать") Тогда
		Закрывать = ДополнительныеПараметры.Закрывать;
	Иначе
		Закрывать = Истина;
	КонецЕсли;
	
	Отказ = Ложь;
	Если Модифицированность ИЛИ ОбновлятьНастройки Тогда
		ОбновитьНастройки(Отказ);
		Модифицированность = Ложь;
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		Модифицированность = Ложь;
		Если Закрывать Тогда
			Закрыть();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура выполняет запись значений настроек в регистр сведений.
//
&НаСервере
Процедура ОбновитьНастройки(Отказ)
	
	ПроверяемыеНастройки = Новый Структура("УчетПоВсемОрганизациям, ОсновнаяОрганизация, ИДОрганизации");
	
	НаборЗаписей = РегистрыСведений.ЭДВАНС_НастройкиПользователей.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Пользователь.Использование = Истина;
	НаборЗаписей.Отбор.Пользователь.Значение      = Пользователь;
	
	НастройкиГруппы = ДеревоНастроек.ПолучитьЭлементы();
	Для Каждого ГруппаНастроек Из НастройкиГруппы Цикл
		
		ПодготовитьНаборЗаписей(НаборЗаписей, ГруппаНастроек, ПроверяемыеНастройки);
		
	КонецЦикла;
	
	Если ПроверяемыеНастройки.УчетПоВсемОрганизациям <> Неопределено И НЕ ПроверяемыеНастройки.УчетПоВсемОрганизациям
		И НЕ ЗначениеЗаполнено(ПроверяемыеНастройки.ОсновнаяОрганизация) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'В том случае если учет ведется по одной организации необходимо её указать в настройках'"),
			,
			"ДеревоНастроек",
			,
			Отказ);
	КонецЕсли;
	
	Если НЕ Отказ Тогда 
		НаборЗаписей.Записать();
		
		ОбновитьПовторноИспользуемыеЗначения();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьНаборЗаписей(НаборЗаписей, ТекущаяНастройка, ПроверяемыеНастройки)
	
	Если ТекущаяНастройка.ЭтоГруппа Тогда
		НастройкиЭлементы = ТекущаяНастройка.ПолучитьЭлементы();
		Для Каждого СтрокаНастроек Из НастройкиЭлементы Цикл
			ПодготовитьНаборЗаписей(НаборЗаписей, СтрокаНастроек, ПроверяемыеНастройки);
		КонецЦикла;
	Иначе 
		ДобавитьЗаписиВНаборЗаписей(НаборЗаписей, ТекущаяНастройка, ПроверяемыеНастройки);			
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ДобавитьЗаписиВНаборЗаписей(НаборЗаписей, СтрокаЗаписи, ПроверяемыеНастройки)
	
	Запись = НаборЗаписей.Добавить();
	
	Запись.Пользователь = Пользователь;
	Запись.Настройка    = СтрокаЗаписи.Настройка;
	Запись.Значение     = СтрокаЗаписи.Настройка.ТипЗначения.ПривестиЗначение(СтрокаЗаписи.Значение);
	
	//Если СтрокаЗаписи.Настройка = ПланыВидовХарактеристик.НастройкиПользователей.УчетПоВсемОрганизациям Тогда
	//	ПроверяемыеНастройки.УчетПоВсемОрганизациям = СтрокаЗаписи.Значение;
	//КонецЕсли;
	
	Если СтрокаЗаписи.Настройка = ПланыВидовХарактеристик.ЭДВАНС_НастройкиПользователей.ОсновнаяОрганизация Тогда
		ПроверяемыеНастройки.ОсновнаяОрганизация = СтрокаЗаписи.Значение;
		ПроверяемыеНастройки.ИДОрганизации = СтрокаЗаписи.ПолучитьИдентификатор();
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Оповещение = Новый ОписаниеОповещения("ОбновитьНастройкиИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
	
	Если НЕ Модифицированность И ОбновлятьНастройки Тогда
		ОбновитьНастройки(Отказ);
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура ДеревоНастроекПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
		Если ОтменаРедактирования Тогда 
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;

КонецПроцедуры


&НаКлиенте
Процедура ДеревоНастроекПередНачаломИзменения(Элемент, Отказ)
	Если Элемент.ТекущиеДанные = Неопределено ИЛИ Элемент.ТекущиеДанные.ЭтоГруппа Тогда
		Отказ = Истина;
		Возврат;
	//ИначеЕсли Элемент.ТекущиеДанные.Настройка = ОсновноеПодразделениеОрганизации Тогда
	//	
	//	Если НЕ ЗначениеЗаполнено(ЗначениеОсновнойОрганизации) Тогда
	//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
	//			НСтр("ru = 'Для выбора основного подразделения необходимо выбрать основную организацию!'"),,,, Отказ);
	//		Возврат;
	//	КонецЕсли;
	//	
	//	НовыйМассив = Новый Массив();
	//	НовыйМассив.Добавить(Новый ПараметрВыбора("Отбор.Владелец", ЗначениеОсновнойОрганизации));
	//	//Если ПоддержкаРаботыСоСтруктурнымиПодразделениями() Тогда
	//		НовыйМассив.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", ЗначениеОсновногоСтруктурногоПодразделения));
	//	//КонецЕсли;
	//	
	//	НовыйМассив.Добавить(Новый ПараметрВыбора("ВыбиратьПодразделенияОрганизации", Истина));
	//	
	//	Элементы.ДеревоНастроекЗначение.ПараметрыВыбора = Новый ФиксированныйМассив(НовыйМассив);;
	//	
	//ИначеЕсли Элемент.ТекущиеДанные.Настройка = ОсновноеСтруктурноеПодразделениеОрганизации Тогда
	//	
	//	Если НЕ ЗначениеЗаполнено(ЗначениеОсновнойОрганизации) Тогда
	//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
	//			НСтр("ru = 'Для выбора основного структурного подразделения необходимо выбрать основную организацию!'"),
	//			,
	//			"ДеревоНастроек",
	//			,
	//			Отказ);
	//		Возврат;
	//	КонецЕсли;
	//	
	//	НовыйМассив = Новый Массив();
	//	НовыйМассив.Добавить(Новый ПараметрВыбора("Отбор.Владелец", ЗначениеОсновнойОрганизации));
	//	НовыйМассив.Добавить(Новый ПараметрВыбора("Отбор.ЯвляетсяСтруктурнымПодразделением", Истина));
	//	НовыйМассив.Добавить(Новый ПараметрВыбора("ВыбиратьСтруктурныеЕдиницы", Истина));
	//	
	//	Элементы.ДеревоНастроекЗначение.ПараметрыВыбора = Новый ФиксированныйМассив(НовыйМассив);

	Иначе 
		Элементы.ДеревоНастроекЗначение.ПараметрыВыбора = Новый ФиксированныйМассив(Новый Массив);
	КонецЕсли;
КонецПроцедуры

