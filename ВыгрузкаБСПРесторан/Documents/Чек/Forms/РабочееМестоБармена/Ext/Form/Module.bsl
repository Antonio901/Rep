

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СоздатьКнопкиМеню(Неопределено);
	Если ИспользоватьСкидки() Тогда
		ПолучитьСкидки();
	КонецЕсли;
	ЕстьСкидка = Ложь;
КонецПроцедуры

//Проверяем используются ли скидки при формировании чеков
&НаСервере
Функция ИспользоватьСкидки()
	Использование = Константы.РаботаБезСкидок.Получить();
	
	Возврат Не Использование;	
КонецФункции

//Получение нужного родителя либо корня справочника МЕНЮ
&НаСервере
Процедура СоздатьКнопкиМеню(НужныйРодитель)
	Если НужныйРодитель = Неопределено Тогда
		НужныйРодитель = Справочники.Меню.НайтиПоНаименованию("ФастФуд", Истина);
		ПолучитьДеревоИзМеню(НужныйРодитель);
	Иначе
		НужныйРодитель = Справочники.Меню.НайтиПоНаименованию(НужныйРодитель, Истина);
		ПолучитьДеревоИзМеню(НужныйРодитель);
	КонецЕсли;
КонецПроцедуры

//Формирование кнопок скидок
&НаСервере
Процедура ПолучитьСкидки()
	Сообщить("");
	Запрос = Новый Запрос;
	Запрос.Текст = 
            "ВЫБРАТЬ
            |	Скидки.Наименование КАК Наименование,
            |	Скидки.ПроцентСкидки КАК ПроцентСкидки,
            |	Скидки.Код КАК Код
            |ИЗ
            |	Справочник.Скидки КАК Скидки";
	
	ТЗСписокСкидок = Запрос.Выполнить().Выгрузить();
	
	НомерКнопки = 0;
	ОчиститьКнопкиСкидок();
	Для Каждого СтрокаТЗ Из ТЗСписокСкидок Цикл
		НомерКнопки = НомерКнопки + 1;
		ТекущаяКнопка 			= Элементы.Найти("КнопкаСкидка"+ НомерКнопки);
		Если ТекущаяКнопка <> Неопределено Тогда
			ТекущаяКнопка.Заголовок = СтрокаТЗ.Наименование;
			ТекущаяКнопка.Видимость = Истина;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

//Дерево элементов Меню с нужным на текущий момент родителем
&НаСервере
Процедура ПолучитьДеревоИзМеню(НужныйРодитель)
	ЭтаФорма.ТаблицаИзЗначенийДерева.Очистить();
	КоличествоЭлементов = 0;
	Запрос = Новый Запрос;
	Запрос.Текст = 
            "ВЫБРАТЬ
            |	Меню.Родитель КАК Родитель,
            |	Меню.Ссылка КАК Меню,
            |	Меню.Код КАК Код,
            |	Меню.ЭтоГруппа КАК ЭтоГруппа,
            |	Меню.Наименование КАК Наименование
            |ИЗ
            |	Справочник.Меню КАК Меню
            |ГДЕ
            |	Меню.Родитель = &НужныйРодитель
            |ИТОГИ ПО
            |	Родитель";
	
	Запрос.УстановитьПараметр("НужныйРодитель", НужныйРодитель);
	
	дМеню = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	ОбходДереваДетально(дМеню, КоличествоЭлементов);
	
	ЭтаФорма.ТекущаяСтраница = 1;
	
	ОтобразитьКнопкиМеню("БезЗнака");	
КонецПроцедуры

//Заполнение кнопок названиями элементов Меню
Процедура ОтобразитьКнопкиМеню(ПредыдущееДействие)
	ТЗ = Новый ТаблицаЗначений;
	ТЗ = РеквизитФормыВЗначение("ТаблицаИзЗначенийДерева");
	НомерКнопки = 0;
	ТекущаяСтраница = ЭтаФорма.ТекущаяСтраница;
	Если ТекущаяСтраница = 1 Тогда
		ОчиститьКнопки();
			Для Каждого СтрокаТЗ Из ТЗ Цикл
				Если СтрокаТЗ.НомерСтраницы = ТекущаяСтраница Тогда
					НомерКнопки = НомерКнопки + 1;
					ТекущаяКнопка 			= Элементы.Найти("Кнопка0"+ НомерКнопки);
					ТекущаяКнопка.Заголовок = СтрокаТЗ.Наименование;
					ТекущаяКнопка.Видимость = Истина;
				КонецЕсли;
			КонецЦикла;
	ИначеЕсли ТекущаяСтраница > 0 И ТЗ.Количество()/15 > ТекущаяСтраница-1 Тогда
		ОчиститьКнопки();
		Для Каждого СтрокаТЗ Из ТЗ Цикл
			Если СтрокаТЗ.НомерСтраницы = ТекущаяСтраница Тогда
				НомерКнопки = НомерКнопки + 1;
				ТекущаяКнопка 			= Элементы.Найти("Кнопка0"+ НомерКнопки);
				ТекущаяКнопка.Заголовок = СтрокаТЗ.Наименование;
				ТекущаяКнопка.Видимость = Истина;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ПредыдущееДействие = "Плюс" Тогда
		ЭтаФорма.ТекущаяСтраница = ЭтаФорма.ТекущаяСтраница - 1;
	ИначеЕсли ПредыдущееДействие = "Минус" Тогда
		ЭтаФорма.ТекущаяСтраница = ЭтаФорма.ТекущаяСтраница + 1;
	КонецЕсли;
КонецПроцедуры

//Процедура "очищает" кнопки Меню после отборажения страницы, для подготовки к показу следующей
Процедура ОчиститьКнопки()
	Сч=0;
	Пока Сч < 15 Цикл
		Сч = Сч + 1;
		ТекущаяКнопка = Элементы.Найти("Кнопка0"+ Сч);
		ТекущаяКнопка.Видимость = Ложь;
	КонецЦикла;
КонецПроцедуры

Процедура ОчиститьКнопкиСкидок()
	Сч=0;
	Пока Сч < 6 Цикл
		Сч = Сч + 1;
		ТекущаяКнопка = Элементы.Найти("КнопкаСкидка"+ Сч);
		ТекущаяКнопка.Видимость = Ложь;
	КонецЦикла;
КонецПроцедуры

//Обход дерева Меню и заполнение таблицы значений для хранения результатов текущего запроса
&НаСервере
Процедура ОбходДереваДетально(ПереданноеДер, КоличествоЭлементов) 
	Для Каждого СтрПолученногоДерева Из ПереданноеДер.Строки Цикл 
		Если СтрПолученногоДерева.Код <> NULL Тогда
			Стр = ЭтаФорма.ТаблицаИзЗначенийДерева.Добавить();
			Стр.Код 			= СтрПолученногоДерева.Код;
			Стр.Наименование 	= СтрПолученногоДерева.Наименование;
			Стр.ЭтоГруппа 		= СтрПолученногоДерева.ЭтоГруппа;
			Стр.НомерСтраницы 	= Цел(Количествоэлементов / 15) + 1;
			КоличествоЭлементов = КоличествоЭлементов + 1;
			Сообщить("прпрп");
		КонецЕсли;
		
		Если СтрПолученногоДерева.Строки.Количество()>0 Тогда 
			ОбходДереваДетально(СтрПолученногоДерева, КоличествоЭлементов);
		КонецЕсли;

	КонецЦикла; 
КонецПроцедуры

//Перелистывание страниц кнопок
&НаКлиенте
Процедура КомандаКнопкаНазад(Команда)
	ЭтаФорма.ТекущаяСтраница = ЭтаФорма.ТекущаяСтраница-1;
	ОтобразитьКнопкиМеню("Минус");
КонецПроцедуры

&НаКлиенте
Процедура КомандаКнопкаВперед(Команда)
	ЭтаФорма.ТекущаяСтраница = ЭтаФорма.ТекущаяСтраница+1;
	ОтобразитьКнопкиМеню("Плюс");
КонецПроцедуры

//Возврат в корень меню
&НаКлиенте
Процедура КомандаКнопкаВверх(Команда)
	СоздатьКнопкиМеню(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура КомандаКнопкиМеню(Команда)
	ЗаголовокТекущейКнопки = ЭтаФорма.ТекущийЭлемент.Заголовок;
	НайтиПоКнопке(ЗаголовокТекущейКнопки);
	АктивироватьСтроку();
КонецПроцедуры

//Текущая кнопка оображает группу или наименование?
&НаСервере
Процедура НайтиПоКнопке(ЗаголовокКнопки)
	ТЗ = Новый ТаблицаЗначений;
	ТЗ = РеквизитФормыВЗначение("ТаблицаИзЗначенийДерева");
	НаименованиеИзМеню = ТЗ.Найти(ЗаголовокКнопки, "Наименование");
	Если НаименованиеИзМеню.ЭтоГруппа Тогда
		НужныйРодитель = НаименованиеИзМеню.Наименование;
		СоздатьКнопкиМеню(НужныйРодитель);
	Иначе
		ДобавитьВТаблицуНоменклатуру(НаименованиеИзМеню.Код);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьВТаблицуНоменклатуру(КодНоменклатуры, Количество = 1, НоваяСтрока = Ложь)
	ТекущийЭлементМеню = Справочники.Меню.НайтиПоКоду(КодНоменклатуры);
	Отбор = Новый Структура;
	Отбор.Вставить("Номенклатура", ТекущийЭлементМеню.Номенклатура);
	
	НоваяСтрока = Объект.Товары.НайтиСтроки(Отбор);
	
	Если НоваяСтрока.Количество() = 0 Тогда
		НоваяСтрока = Объект.Товары.Добавить();
		НоваяСтрока.Номенклатура 	= ТекущийЭлементМеню.Номенклатура;
		НоваяСтрока.Количество 		= НоваяСтрока.Количество + Количество;
		НоваяСтрока.Цена 			= РассчитатьЦену();
		НоваяСтрока.Сумма 			= НоваяСтрока.Количество * НоваяСтрока.Цена;
	Иначе
		НоваяСтрока[0].Номенклатура = ТекущийЭлементМеню.Номенклатура;
		НоваяСтрока[0].Количество 	= НоваяСтрока[0].Количество + Количество;
		НоваяСтрока[0].Цена 		= РассчитатьЦену();
		НоваяСтрока[0].Сумма 		= НоваяСтрока[0].Количество * НоваяСтрока[0].Цена;		
	КонецЕсли;
КонецПроцедуры

//Расчет цены номенклатуры
&Насервере
Функция РассчитатьЦену()
	Цена = 100;
	
	Возврат Цена;
КонецФункции


//Очистка всего списка номенклатуры
&НаКлиенте
Процедура КомандаКнопкаОчистить(Команда)
	ОчиститьСписокНоменклатуры();
КонецПроцедуры

&НаСервере
Процедура ОчиститьСписокНоменклатуры() Экспорт
	Объект.Товары.Очистить();	
КонецПроцедуры

//Удаление текущей строки списка номенклатуры
&НаКлиенте
Процедура КомандаКнопкаУдалитьСтроку(Команда)
	УдалитьТекущуюСтроку();
	АктивироватьСтроку();
КонецПроцедуры

&НаСервере
Процедура УдалитьТекущуюСтроку() Экспорт
	Если Элементы.СписокНоменклатуры.ТекущаяСтрока <> Неопределено Тогда
		СтрокаТаблицы = Объект.Товары.НайтиПоИдентификатору(Элементы.СписокНоменклатуры.ТекущаяСтрока);
		Объект.Товары.Удалить(СтрокаТаблицы);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаКнопкаЗакрыть(Команда)
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура АктивироватьСтроку()
	Если Объект.Товары.Количество() > 0 Тогда
		Элементы.СписокНоменклатуры.ТекущаяСтрока = Объект.Товары[Объект.Товары.Количество() - 1].ПолучитьИдентификатор();
		ТекущаяСтрока = Элементы.СписокНоменклатуры.ТекущиеДанные;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаКнопкаОплата(Команда)
	//Элементы.Группа1СтраницаМеню.Видимость 	= Ложь;
	Элементы.ГруппаМеню.ТекущаяСтраница = Элементы.Группа2ЦифрыИСуммы;
	Элементы.ГруппаСтраницыКнопок.ТекущаяСтраница = Элементы.ГруппаКнопкиОплаты;
	ОчиститьНадписи();
	ОбновитьНадписи();
КонецПроцедуры

//Увеличение количества выбранной номенклатуры
&НаКлиенте
Процедура КомандаКнопкаПлюс(Команда)
	ВыбраннаяСтрока = Элементы.СписокНоменклатуры.ТекущаяСтрока;
	Если ВыбраннаяСтрока <> Неопределено Тогда
		СтрокаТаблицы = Объект.Товары.НайтиПоИдентификатору(ВыбраннаяСтрока);
		СтрокаТаблицы.Количество = СтрокаТаблицы.Количество + 1;
		СтрокаТаблицы.Сумма = СтрокаТаблицы.Количество * СтрокаТаблицы.Цена;
	КонецЕсли;
КонецПроцедуры

//Уменьшение количества выбранной номенклатуры
&НаКлиенте
Процедура КомандаКнопкаМинус(Команда)
	ВыбраннаяСтрока = Элементы.СписокНоменклатуры.ТекущаяСтрока;
	Если ВыбраннаяСтрока <> Неопределено Тогда
		СтрокаТаблицы = Объект.Товары.НайтиПоИдентификатору(ВыбраннаяСтрока);
		Если СтрокаТаблицы.Количество > 1 Тогда
			СтрокаТаблицы.Количество = СтрокаТаблицы.Количество - 1;
			СтрокаТаблицы.Сумма = СтрокаТаблицы.Количество * СтрокаТаблицы.Цена;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//Нажатие цифры
&НаКлиенте
Процедура КомандаКнопкаЦифры(Команда)
	ВнесеннаяСумма = Строка(СуммаВнесено);
	НажатаяЦифра = Прав(ЭтаФорма.ТекущийЭлемент.Имя,1);
	ВнесеннаяСумма = ВнесеннаяСумма + НажатаяЦифра;
	СуммаВнесено = Число(ВнесеннаяСумма);
	ОбновитьНадписи();
КонецПроцедуры

//Редактирование внесенной суммы
&НаКлиенте
Процедура КомандаКнопкаУдалитьСимвол(Команда)
	КоличествоСимволов = СтрДлина(Строка(СуммаВнесено));
	Если КоличествоСимволов > 1 Тогда
		СуммаВнесено = Число(Лев(Строка(СуммаВнесено),КоличествоСимволов - 1));
	Иначе
		СуммаВнесено = 0;
	КонецЕсли;
	ОбновитьНадписи();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНадписи()
	СуммаСкидки = Окр(Объект.Товары.Итог("Сумма") * Объект.ПроцентСкидки / 100, 0, 1);
	Объект.СуммаСкидки = СуммаСкидки;
	ИтогоКОплате = Объект.Товары.Итог("Сумма") - СуммаСкидки;
	Если СуммаВнесено > ИтогоКОплате И ИтогоКОплате <> 0 Тогда
		Сдача = СуммаВнесено - ИтогоКОплате;
	Иначе
		Сдача = 0;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьНадписи()
	Объект.СуммаСкидки = 0;
	Объект.ПроцентСкидки = 0;
	ИтогоКОплате = 0;
	Сдача = 0;
	СуммаВнесено = 0;
КонецПроцедуры

&НаКлиенте
Процедура КомандаКнопкаСкидка(Команда)
	НаименованиеСкидки = ЭтаФорма.ТекущийЭлемент.Заголовок;
	ТекущийПроцентСкидки = ПолучитьТекущуюСкидку(НаименованиеСкидки);
	Объект.ПроцентСкидки = ТекущийПроцентСкидки;

	ОбновитьНадписи();
КонецПроцедуры

&НаСервере
Функция ПолучитьТекущуюСкидку(НаименованиеСкидки)
	ТекущаяСкидка = Справочники.Скидки.НайтиПоНаименованию(НаименованиеСкидки);
	
	Возврат ТекущаяСкидка.ПроцентСкидки;	
КонецФункции


